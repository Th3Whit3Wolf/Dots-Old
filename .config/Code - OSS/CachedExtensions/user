{"input":{"ourVersion":"1.33.1","locale":"en","devMode":false,"absoluteFolderPath":"/home/doc/.vscode-oss/extensions","isBuiltin":false,"isUnderDevelopment":false,"tanslations":{},"mtime":1556377516610},"result":[{"name":"rainbow-brackets","displayName":"Rainbow Brackets","description":"A rainbow brackets extension for VS Code.","version":"0.0.6","publisher":"2gua","license":"MIT","icon":"images/rainbowBrackets.png","author":{"name":"2gua"},"galleryBanner":{"color":"#5c2d91","theme":"dark"},"engines":{"vscode":"^1.0.0"},"homepage":"http://www.2gua.info/","categories":["Other"],"keywords":["rainbow","bracket","brackets"],"activationEvents":["*"],"main":"/home/doc/.vscode-oss/extensions/2gua.rainbow-brackets-0.0.6/out/src/extension","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^1.8.5","vscode":"^0.11.0"},"uuid":"797a79de-a0fd-4349-9034-bec47be9a941","isBuiltin":false,"isUnderDevelopment":false,"id":"2gua.rainbow-brackets","identifier":{"value":"2gua.rainbow-brackets","_lower":"2gua.rainbow-brackets"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/2gua.rainbow-brackets-0.0.6","path":"/home/doc/.vscode-oss/extensions/2gua.rainbow-brackets-0.0.6","scheme":"file"}},{"name":"better-comments","displayName":"Better Comments","icon":"icon.png","description":"Improve your code commenting by annotating with alert, informational, TODOs, and more!","version":"2.0.3","publisher":"aaron-bond","author":{"name":"Aaron Bond"},"homepage":"https://github.com/aaron-bond/better-comments/blob/master/README.md","license":"SEE LICENSE IN LICENSE.md","repository":{"type":"git","url":"https://github.com/aaron-bond/better-comments"},"bugs":"https://github.com/aaron-bond/better-comments/issues","categories":["Formatters"],"engines":{"vscode":"^1.8.1"},"activationEvents":["onLanguage:ada","onLanguage:al","onLanguage:asciidoc","onLanguage:bibtex","onLanguage:c","onLanguage:clojure","onLanguage:COBOL","onLanguage:coffeescript","onLanguage:cpp","onLanguage:csharp","onLanguage:css","onLanguage:d","onLanguage:dart","onLanguage:diagram","onLanguage:dockerfile","onLanguage:elixir","onLanguage:erlang","onLanguage:flax","onLanguage:fsharp","onLanguage:fortran-modern","onLanguage:gdscript","onLanguage:go","onLanguage:graphql","onLanguage:groovy","onLanguage:haskell","onLanguage:html","onLanguage:haxe","onLanguage:hive-sql","onLanguage:kotlin","onLanguage:java","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:jsonc","onLanguage:julia","onLanguage:latex","onLanguage:less","onLanguage:lisp","onLanguage:lua","onLanguage:makefile","onLanguage:matlab","onLanguage:nim","onLanguage:objective-c","onLanguage:objective-cpp","onLanguage:objectpascal","onLanguage:pascal","onLanguage:perl","onLanguage:perl6","onLanguage:pig","onLanguage:plaintext","onLanguage:plsql","onLanguage:php","onLanguage:powershell","onLanguage:puppet","onLanguage:python","onLanguage:r","onLanguage:racket","onLanguage:ruby","onLanguage:rust","onLanguage:scala","onLanguage:sas","onLanguage:sass","onLanguage:scss","onLanguage:shaderlab","onLanguage:shellscript","onLanguage:sql","onLanguage:stata","onLanguage:stylus","onLanguage:swift","onLanguage:tcl","onLanguage:terraform","onLanguage:twig","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:vb","onLanguage:verilog","onLanguage:vue","onLanguage:yaml"],"galleryBanner":{"color":"#e3f4ff","theme":"light"},"main":"/home/doc/.vscode-oss/extensions/aaron-bond.better-comments-2.0.3/out/extension","scripts":{"vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","lint":"tslint -c tslint.json 'src/**/*.ts'"},"contributes":{"configuration":{"title":"Better Comments configuration","properties":{"better-comments.multilineComments":{"type":"boolean","description":"Whether the multiline comment highlighter should be active","default":true},"better-comments.highlightPlainText":{"type":"boolean","description":"Whether the plaintext comment highlighter should be active","default":false},"better-comments.tags":{"type":"array","description":"Tags which are used to color the comments. Changes require a restart of VS Code to take effect","default":[{"tag":"!","color":"#FF2D00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"?","color":"#3498DB","strikethrough":false,"backgroundColor":"transparent"},{"tag":"//","color":"#474747","strikethrough":true,"backgroundColor":"transparent"},{"tag":"todo","color":"#FF8C00","strikethrough":false,"backgroundColor":"transparent"},{"tag":"*","color":"#98C379","strikethrough":false,"backgroundColor":"transparent"}]}}}},"devDependencies":{"typescript":"^2.6.1","vsce":"^1.48.0","vscode":"^1.1.0","@types/node":"^8.0.0","tslint":"^5.10.0"},"uuid":"7a0110bb-231a-4598-aa1b-0769ea46d28b","isBuiltin":false,"isUnderDevelopment":false,"id":"aaron-bond.better-comments","identifier":{"value":"aaron-bond.better-comments","_lower":"aaron-bond.better-comments"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/aaron-bond.better-comments-2.0.3","path":"/home/doc/.vscode-oss/extensions/aaron-bond.better-comments-2.0.3","scheme":"file"}},{"name":"vscode-javascript-snippet-pack","publisher":"akamud","displayName":"JavaScript Snippet Pack ","description":"A snippet pack to make you more productive working with JavaScript","icon":"art/js-icon.png","galleryBanner":{"color":"#F0DB4F","theme":"dark"},"license":"MIT","bugs":{"url":"https://github.com/akamud/vscode-javascript-snippet-pack/issues"},"homepage":"https://github.com/akamud/vscode-javascript-snippet-pack/","repository":{"type":"git","url":"https://github.com/akamud/vscode-javascript-snippet-pack/blob/master/README.md"},"version":"0.1.5","engines":{"vscode":"^0.11.x"},"categories":["Snippets"],"keywords":["Javascript","Typescript"],"contributes":{"snippets":[{"language":"javascript","path":"./snippets/javascript.json"},{"language":"typescript","path":"./snippets/javascript.json"},{"language":"javascriptreact","path":"./snippets/javascript.json"},{"language":"typescriptreact","path":"./snippets/javascript.json"}]},"uuid":"510e1d4e-1f9e-4910-8dbd-627c6f8a9791","isBuiltin":false,"isUnderDevelopment":false,"id":"akamud.vscode-javascript-snippet-pack","identifier":{"value":"akamud.vscode-javascript-snippet-pack","_lower":"akamud.vscode-javascript-snippet-pack"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/akamud.vscode-javascript-snippet-pack-0.1.5","path":"/home/doc/.vscode-oss/extensions/akamud.vscode-javascript-snippet-pack-0.1.5","scheme":"file"}},{"name":"vscode-browser-preview","displayName":"Browser Preview","categories":["Other"],"icon":"resources/icon_128.png","preview":true,"author":{"email":"kenneth@auchenberg.dk","name":"Kenneth Auchenberg"},"description":"A real browser preview inside your editor that you can debug.","publisher":"auchenberg","engines":{"vscode":"^1.30.0"},"extensionKind":"ui","license":"MIT","version":"0.5.3","main":"/home/doc/.vscode-oss/extensions/auchenberg.vscode-browser-preview-0.5.3/build/ext-src/extension.js","activationEvents":["onView:targetTree","onCommand:browser-preview.openPreview","onCommand:browser-preview.openActiveFile","onDebugInitialConfigurations","onDebug","onFileSystem:vsls","onCommand:liveshare.start","onCommand:liveshare.startFromActivityBar","onCommand:liveshare.startReadOnly","onCommand:liveshare.startReadOnlyFromActivityBar","onCommand:liveshare.startReadOnlyFromSessionExplorer"],"contributes":{"configuration":{"title":"Browser Preview","type":"object","properties":{"browser-preview.startUrl":{"default":"https://code.visualstudio.com","description":"The default start url for new Browser Preview instances","type":"string"},"browser-preview.chromeExecutable":{"default":"","description":"The full path to the executable, including the complete filename of the exectuable","type":"string"},"browser-preview.verbose":{"default":"","description":"Toggles verbose logging","type":"boolean"},"browser-preview.format":{"default":"jpeg","description":"The type of image used in rendering preview. Supported values are: `jpeg` (default) and `png`","type":"string"}}},"commands":[{"category":"Browser Preview","command":"browser-preview.openPreview","title":"Open Preview"},{"category":"Browser Preview","command":"browser-preview.openSharedBrowser","title":"Open Shared Browser"},{"category":"Browser Preview","command":"browser-preview.openActiveFile","title":"Open Active File in Preview"}],"debuggers":[{"type":"browser-preview","label":"Browser Preview","configurationSnippets":[{"label":"Browser Preview: Launch","description":"Launch Browser Preview to localhost","body":{"type":"browser-preview","request":"launch","name":"Browser Preview: Launch","url":"http://localhost:3000"}},{"label":"Browser Preview: Attach","description":"Attach to open Browser Preview instances","body":{"type":"browser-preview","request":"attach","name":"Browser Preview: Attach"}}],"configurationAttributes":{"launch":{"properties":{"url":{"type":"string","description":"Absolute url to launch","default":"http://localhost:3000"},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{"/":"${workspaceFolder}"}},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{"webpack:///./*":"${webRoot}/*","webpack:///src/*":"${webRoot}/*","webpack:///*":"*","webpack:///./~/*":"${webRoot}/node_modules/*","meteor://💻app/*":"${webRoot}/*"}}}},"attach":{"properties":{"urlFilter":{"type":"string","description":"Will search for a page with this url and attach to it, if found. Can have * wildcards.","default":""},"webRoot":{"type":"string","description":"This specifies the workspace absolute path to the webserver root. Used to resolve paths like `/app.js` to files on disk. Shorthand for a pathMapping for \"/\"","default":"${workspaceFolder}"},"pathMapping":{"type":"object","description":"A mapping of URLs/paths to local folders, to resolve scripts in Chrome to scripts on disk","default":{"/":"${workspaceFolder}"}},"trace":{"type":["boolean","string"],"enum":["verbose",true],"default":true,"description":"When 'true', the debugger will log tracing info to a file. When 'verbose', it will also show logs in the console."},"sourceMapPathOverrides":{"type":"object","description":"A set of mappings for rewriting the locations of source files from what the sourcemap says, to their locations on disk. See README for details.","default":{"webpack:///./*":"${webRoot}/*","webpack:///src/*":"${webRoot}/*","webpack:///*":"*","webpack:///./~/*":"${webRoot}/node_modules/*","meteor://💻app/*":"${webRoot}/*"}}}}}}],"views":{"browser-preview":[{"id":"targetTree","name":"Targets"}]},"viewsContainers":{"activitybar":[{"icon":"resources/icon.svg","id":"browser-preview","title":"Browser Preview"}]},"menus":{"commandPalette":[{"command":"browser-preview.openSharedBrowser","when":"false"}]}},"dependencies":{"browser-viewport-device-descriptions":"^1.1.0","event-emitter-enhancer":"^1.0.57","eventemitter2":"^5.0.1","get-chrome":"0.0.2","get-port":"^4.1.0","karma-chrome-launcher":"^2.2.0","lodash":"^4.17.11","puppeteer-core":"^1.11.0","re-resizable":"^4.11.0","react":"^16.7.0","react-dom":"^16.7.0","vsls":"^0.3.967","uuid":"^3.3.2","which-chrome":"^0.1.1"},"devDependencies":{"@types/jest":"23.3.12","@types/lodash":"^4.14.119","@types/node":"10.12.18","@types/react":"16.7.18","@types/react-dom":"16.0.11","husky":"^1.3.1","prettier":"^1.16.1","pretty-quick":"^1.10.0","react-scripts":"^2.1.5","typescript":"3.2.2","vscode":"^1.1.17"},"resolutions":{"@types/react":"16.7.18"},"eslintConfig":{"extends":"react-app"},"browserslist":[">0.2%","not dead","not ie <= 11","not op_mini all"],"repository":{"type":"git","url":"https://github.com/auchenberg/vscode-browser-preview.git"},"scripts":{"build":"react-scripts build && tsc -p tsconfig.extension.json","eject":"react-scripts eject","postinstall":"node ./node_modules/vscode/bin/install","start":"react-scripts start","vscode:prepublish":"react-scripts build && tsc -p tsconfig.extension.json"},"husky":{"hooks":{"pre-commit":"pretty-quick --staged"}},"uuid":"126e4983-78cb-433f-a67c-9b07c39c7802","isBuiltin":false,"isUnderDevelopment":false,"id":"auchenberg.vscode-browser-preview","identifier":{"value":"auchenberg.vscode-browser-preview","_lower":"auchenberg.vscode-browser-preview"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/auchenberg.vscode-browser-preview-0.5.3","path":"/home/doc/.vscode-oss/extensions/auchenberg.vscode-browser-preview-0.5.3","scheme":"file"}},{"name":"better-toml","displayName":"Better TOML","description":"Better TOML Language support","author":"Gigih Aji Ibrahim <bungcip@gmail.com>","icon":"icon.png","version":"0.3.2","publisher":"bungcip","license":"MIT","homepage":"https://github.com/bungcip/better-toml/blob/master/README.md","repository":{"type":"git","url":"https://github.com/bungcip/better-toml.git"},"bugs":{"url":"https://github.com/bungcip/better-toml/issues","email":"bungcip@gmail.com"},"engines":{"vscode":"^1.18.0"},"categories":["Languages"],"keywords":["toml"],"activationEvents":["onLanguage:toml"],"main":"/home/doc/.vscode-oss/extensions/bungcip.better-toml-0.3.2/out/src/extension","contributes":{"languages":[{"id":"toml","aliases":["TOML","toml"],"extensions":[".toml"],"mimetypes":["text/x-toml"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"toml","scopeName":"source.toml","path":"./syntaxes/TOML.tmLanguage"},{"scopeName":"markdown.toml.frontmatter.codeblock","path":"./syntaxes/TOML.frontMatter.tmLanguage","injectTo":["text.html.markdown"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"dependencies":{"vscode-languageclient":"^2.6.0","vscode-languageserver":"^2.6.0","toml":"^2.3.3"},"devDependencies":{"typescript":"2.5.2","vscode":"^1.0.3","mocha":"^3.1.2","@types/node":"^6.0.46","@types/mocha":"^2.2.32"},"uuid":"464f4ac7-af65-4aa9-9907-4ba7fa419085","isBuiltin":false,"isUnderDevelopment":false,"id":"bungcip.better-toml","identifier":{"value":"bungcip.better-toml","_lower":"bungcip.better-toml"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/bungcip.better-toml-0.3.2","path":"/home/doc/.vscode-oss/extensions/bungcip.better-toml-0.3.2","scheme":"file"}},{"name":"ccls","description":"C/C++/ObjC language server supporting cross references, hierarchies, completion and semantic highlighting","author":"ccls-project","license":"MIT","version":"0.1.26","publisher":"ccls-project","scripts":{"vscode:prepublish":"npm run lint && npm run compile","compile":"npx tsc -p ./","update-vscode":"node ./node_modules/vscode/bin/install","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","lint":"npx tslint -p ./"},"devDependencies":{"@types/node":"^9.6.41","@types/ws":"^6.0.1","typescript":"^2.9.2","tslint":"^5.11.0","vsce":"^1.54.0","vscode":"^1.1.26"},"dependencies":{"vscode-languageclient":"^5.2.1","ws":"^6.1.4"},"repository":{"type":"git","url":"https://github.com/MaskRay/vscode-ccls.git"},"preview":true,"engines":{"vscode":"^1.30.0"},"categories":["Programming Languages"],"activationEvents":["onLanguage:c","onLanguage:cpp","onLanguage:objective-c","onLanguage:objective-cpp","workspaceContains:.ccls","workspaceContains:compile_commands.json"],"main":"/home/doc/.vscode-oss/extensions/ccls-project.ccls-0.1.26/out/extension","contributes":{"views":{"explorer":[{"id":"ccls.callHierarchy","name":"Call Hierarchy","when":"extension.ccls.callHierarchyVisible"},{"id":"ccls.inheritanceHierarchy","name":"Inheritance Hierarchy","when":"extension.ccls.inheritanceHierarchyVisible"},{"id":"ccls.memberHierarchy","name":"Member Hierarchy","when":"extension.ccls.memberHierarchyVisible"}]},"menus":{"editor/context":[{"command":"ccls.inheritanceHierarchy","when":"resourceLangId == cpp","group":"navigation@1.31"},{"command":"ccls.callHierarchy","when":"resourceLangId == cpp","group":"navigation@1.32"},{"command":"ccls.memberHierarchy","when":"resourceLangId == cpp","group":"navigation@1.32"},{"command":"ccls.vars","when":"resourceLangId == cpp","group":"navigation@1.33"},{"command":"ccls.base","when":"resourceLangId == cpp","group":"navigation@1.34"}],"view/title":[{"command":"ccls.call.useCallers","when":"view == ccls.callHierarchy","group":"navigation"},{"command":"ccls.call.useCallees","when":"view == ccls.callHierarchy","group":"navigation"},{"command":"ccls.closeCallHierarchy","when":"view == ccls.callHierarchy","group":"navigation"},{"command":"ccls.closeInheritanceHierarchy","when":"view == ccls.inheritanceHierarchy","group":"navigation"},{"command":"ccls.closeMemberHierarchy","when":"view == ccls.memberHierarchy","group":"navigation"}],"view/item/context":[{"command":"ccls.gotoForTreeView","when":"viewItem == cclsGoto"}],"commandPalette":[{"command":"ccls.closeCallHierarchy","when":"false"},{"command":"ccls.closeInheritanceHierarchy","when":"false"},{"command":"ccls.closeMemberHierarchy","when":"false"},{"command":"ccls.gotoForTreeView","when":"false"},{"command":"ccls.call.useCallers","when":"false"},{"command":"ccls.call.useCallees","when":"false"}]},"commands":[{"title":"Reload Index","category":"ccls","command":"ccls.reload"},{"title":"Restart language server","category":"ccls","command":"ccls.restart"},{"title":"Restart language server in lazy mode","category":"ccls","command":"ccls.restartLazy"},{"title":"Call Hierarchy","category":"ccls","command":"ccls.callHierarchy"},{"title":"Callers","category":"ccls","command":"ccls.call.useCallers","icon":{"light":"resources/base-light.svg","dark":"resources/base-dark.svg"}},{"title":"Callees","category":"ccls","command":"ccls.call.useCallees","icon":{"light":"resources/derived-light.svg","dark":"resources/derived-dark.svg"}},{"title":"Close","command":"ccls.closeCallHierarchy","icon":{"light":"resources/close-light.svg","dark":"resources/close-dark.svg"}},{"title":"Inheritance Hierarchy","category":"ccls","command":"ccls.inheritanceHierarchy"},{"title":"Close","command":"ccls.closeInheritanceHierarchy","icon":{"light":"resources/close-light.svg","dark":"resources/close-dark.svg"}},{"title":"Member Hierarchy","category":"ccls","command":"ccls.memberHierarchy"},{"title":"Close","command":"ccls.closeMemberHierarchy","icon":{"light":"resources/close-light.svg","dark":"resources/close-dark.svg"}},{"title":"Show Variables","category":"ccls","command":"ccls.vars"},{"title":"Show Cross References","category":"ccls","command":"ccls.call"},{"title":"Show Base","category":"ccls","command":"ccls.base"},{"title":"Go to Tree View Entry","category":"ccls","command":"ccls.gotoForTreeView"}],"configuration":{"type":"object","title":"ccls","properties":{"ccls.launch.command":{"type":"string","default":"ccls","description":"Path to the ccls binary (default assumes the binary is in the PATH)"},"ccls.launch.args":{"type":"array","default":[],"description":"Array containing extra arguments to pass to the ccls binary"},"ccls.cache.directory":{"type":"string","default":".ccls-cache","description":"Absolute or relative (from the project root) path to the directory that the cached index will be stored in. Try to have this directory on an SSD. If empty, cached indexes will not be saved on disk.\n\n${workspaceFolder} will be replaced by the folder where .vscode/settings.json resides.\n\nCache directories are project-wide, so this should be configured in the workspace settings so multiple indexes do not clash.\n\nExample value: \"/work/ccls-cache/chrome/\""},"ccls.cache.hierarchicalPath":{"type":"boolean","default":false,"description":"If false, store cache files as $directory/@a@b/c.cc.blob\n\nIf true, $directory/a/b/c.cc.blob."},"ccls.highlighting.enabled.types":{"type":"boolean","default":false,"description":"If semantic highlighting for classes, structs, and unions is enabled/disabled."},"ccls.highlighting.enabled.freeStandingFunctions":{"type":"boolean","default":false,"description":"If semantic highlighting for member functions is enabled/disabled."},"ccls.highlighting.enabled.memberFunctions":{"type":"boolean","default":false,"description":"If semantic highlighting for member functions is enabled/disabled."},"ccls.highlighting.enabled.freeStandingVariables":{"type":"boolean","default":false,"description":"If semantic highlighting for member free-standing variables is enabled/disabled."},"ccls.highlighting.enabled.memberVariables":{"type":"boolean","default":false,"description":"If semantic highlighting for member variables is enabled/disabled."},"ccls.highlighting.enabled.namespaces":{"type":"boolean","default":false,"description":"If semantic highlighting for namespaces is enabled/disabled."},"ccls.highlighting.enabled.macros":{"type":"boolean","default":false,"description":"If semantic highlighting for macros is enabled/disabled."},"ccls.highlighting.enabled.enums":{"type":"boolean","default":false,"description":"If semantic highlighting for enumerations is enabled/disabled."},"ccls.highlighting.enabled.typeAliases":{"type":"boolean","default":false,"description":"If semantic highlighting for type aliases is enabled/disabled."},"ccls.highlighting.enabled.enumConstants":{"type":"boolean","default":false,"description":"If semantic highlighting for enumerators is enabled/disabled."},"ccls.highlighting.enabled.staticMemberFunctions":{"type":"boolean","default":false,"description":"If semantic highlighting for static member functions is enabled/disabled."},"ccls.highlighting.enabled.parameters":{"type":"boolean","default":false,"description":"If semantic highlighting for parameters is enabled/disabled."},"ccls.highlighting.enabled.templateParameters":{"type":"boolean","default":false,"description":"If semantic highlighting for template parameters is enabled/disabled."},"ccls.highlighting.enabled.staticMemberVariables":{"type":"boolean","default":false,"description":"If semantic highlighting for static member variables is enabled/disabled."},"ccls.highlighting.enabled.globalVariables":{"type":"boolean","default":false,"description":"If semantic highlighting for global variables is enabled/disabled."},"ccls.highlighting.colors.types":{"type":"array","default":["#e1afc3","#d533bb","#9b677f","#e350b6","#a04360","#dd82bc","#de3864","#ad3f87","#dd7a90","#e0438a"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.freeStandingFunctions":{"type":"array","default":["#e5b124","#927754","#eb992c","#e2bf8f","#d67c17","#88651e","#e4b953","#a36526","#b28927","#d69855"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.memberFunctions":{"type":"array","default":["#e5b124","#927754","#eb992c","#e2bf8f","#d67c17","#88651e","#e4b953","#a36526","#b28927","#d69855"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.freeStandingVariables":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.memberVariables":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.namespaces":{"type":"array","default":["#429921","#58c1a4","#5ec648","#36815b","#83c65d","#417b2f","#43cc71","#7eb769","#58bf89","#3e9f4a"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.macros":{"type":"array","default":["#e79528","#c5373d","#e8a272","#d84f2b","#a67245","#e27a33","#9b4a31","#b66a1e","#e27a71","#cf6d49"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.enums":{"type":"array","default":["#e1afc3","#d533bb","#9b677f","#e350b6","#a04360","#dd82bc","#de3864","#ad3f87","#dd7a90","#e0438a"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.typeAliases":{"type":"array","default":["#e1afc3","#d533bb","#9b677f","#e350b6","#a04360","#dd82bc","#de3864","#ad3f87","#dd7a90","#e0438a"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.staticMemberFunctions":{"type":"array","default":["#e5b124","#927754","#eb992c","#e2bf8f","#d67c17","#88651e","#e4b953","#a36526","#b28927","#d69855"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.enumConstants":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.parameters":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.templateParameters":{"type":"array","default":["#e1afc3","#d533bb","#9b677f","#e350b6","#a04360","#dd82bc","#de3864","#ad3f87","#dd7a90","#e0438a"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.staticMemberVariables":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.colors.globalVariables":{"type":"array","default":["#587d87","#26cdca","#397797","#57c2cc","#306b72","#6cbcdf","#368896","#3ea0d2","#48a5af","#7ca6b7"],"description":"Colors to use for semantic highlighting. A good generator is http://tools.medialab.sciences-po.fr/iwanthue/. If multiple colors are specified, semantic highlighting will cycle through them for successive symbols."},"ccls.highlighting.underline.types":{"type":"boolean","default":false},"ccls.highlighting.underline.freeStandingFunctions":{"type":"boolean","default":false},"ccls.highlighting.underline.memberFunctions":{"type":"boolean","default":false},"ccls.highlighting.underline.freeStandingVariables":{"type":"boolean","default":false},"ccls.highlighting.underline.memberVariables":{"type":"boolean","default":false},"ccls.highlighting.underline.namespaces":{"type":"boolean","default":false},"ccls.highlighting.underline.macros":{"type":"boolean","default":false},"ccls.highlighting.underline.enums":{"type":"boolean","default":false},"ccls.highlighting.underline.typeAliases":{"type":"boolean","default":false},"ccls.highlighting.underline.enumConstants":{"type":"boolean","default":false},"ccls.highlighting.underline.staticMemberFunctions":{"type":"boolean","default":true},"ccls.highlighting.underline.parameters":{"type":"boolean","default":false},"ccls.highlighting.underline.templateParameters":{"type":"boolean","default":false},"ccls.highlighting.underline.staticMemberVariables":{"type":"boolean","default":true},"ccls.highlighting.underline.globalVariables":{"type":"boolean","default":false},"ccls.highlighting.italic.types":{"type":"boolean","default":false},"ccls.highlighting.italic.freeStandingFunctions":{"type":"boolean","default":false},"ccls.highlighting.italic.memberFunctions":{"type":"boolean","default":true},"ccls.highlighting.italic.freeStandingVariables":{"type":"boolean","default":false},"ccls.highlighting.italic.memberVariables":{"type":"boolean","default":true},"ccls.highlighting.italic.namespaces":{"type":"boolean","default":false},"ccls.highlighting.italic.macros":{"type":"boolean","default":false},"ccls.highlighting.italic.enums":{"type":"boolean","default":false},"ccls.highlighting.italic.typeAliases":{"type":"boolean","default":false},"ccls.highlighting.italic.enumConstants":{"type":"boolean","default":false},"ccls.highlighting.italic.staticMemberFunctions":{"type":"boolean","default":false},"ccls.highlighting.italic.parameters":{"type":"boolean","default":true},"ccls.highlighting.italic.templateParameters":{"type":"boolean","default":false},"ccls.highlighting.italic.staticMemberVariables":{"type":"boolean","default":false},"ccls.highlighting.italic.globalVariables":{"type":"boolean","default":false},"ccls.highlighting.bold.types":{"type":"boolean","default":true},"ccls.highlighting.bold.freeStandingFunctions":{"type":"boolean","default":false},"ccls.highlighting.bold.memberFunctions":{"type":"boolean","default":false},"ccls.highlighting.bold.freeStandingVariables":{"type":"boolean","default":false},"ccls.highlighting.bold.memberVariables":{"type":"boolean","default":false},"ccls.highlighting.bold.namespaces":{"type":"boolean","default":true},"ccls.highlighting.bold.macros":{"type":"boolean","default":false},"ccls.highlighting.bold.enums":{"type":"boolean","default":true},"ccls.highlighting.bold.typeAliases":{"type":"boolean","default":true},"ccls.highlighting.bold.enumConstants":{"type":"boolean","default":true},"ccls.highlighting.bold.staticMemberFunctions":{"type":"boolean","default":false},"ccls.highlighting.bold.parameters":{"type":"boolean","default":false},"ccls.highlighting.bold.templateParameters":{"type":"boolean","default":true},"ccls.highlighting.bold.staticMemberVariables":{"type":"boolean","default":false},"ccls.highlighting.bold.globalVariables":{"type":"boolean","default":false},"ccls.clang.extraArgs":{"type":"array","default":[],"description":"An extra set of command line arguments to give clang when indexing. Each list entry is a separate argument."},"ccls.clang.excludeArgs":{"type":"array","default":[],"description":"An set of command line arguments to strip before passing to clang when indexing. Each list entry is a separate argument."},"ccls.clang.pathMappings":{"type":"array","default":[],"description":"Translate paths in compile_commands.json entries, .ccls options and cache files. This allows to reuse cache files built otherwhere if the source paths are different."},"ccls.index.whitelist":{"type":"array","default":[],"description":"If a translation unit's absolute path partially matches any ECMAScript regex in this list, it will be indexed. The whitelist takes priority over the blacklist. To only index files in the whitelist, make \"ccls.index.blacklist\" match everything, ie, set it to \".*\"."},"ccls.index.blacklist":{"type":"array","default":[],"description":"A translation unit (cc/cpp file) is not indexed if any of the ECMAScript regexes in this list partially matches translation unit's the absolute path."},"ccls.clang.resourceDir":{"type":"string","default":"","description":"Default value to use for clang -resource-dir argument. This will be automatically supplied by ccls if not provided."},"ccls.misc.compilationDatabaseCommand":{"type":"string","default":"","description":"If not empty, the compilation database command to use"},"ccls.misc.compilationDatabaseDirectory":{"type":"string","default":"","description":"If not empty, the compilation database directory to use instead of the project root"},"ccls.misc.showInactiveRegions":{"type":"boolean","default":true,"description":"If true, ccls will highlight skipped ranges."},"ccls.completion.include.maxPathSize":{"type":"integer","default":37,"description":"Maximum length for path in #include proposals. If the path length goes beyond this number it will be elided. Set to 0 to always display the full path."},"ccls.completion.include.suffixWhitelist":{"type":"array","default":[".h",".hpp",".hh"],"description":"Only files ending in one of these values will be shown in include auto-complete. Set to the empty-list to disable include auto-complete."},"ccls.completion.include.whitelist":{"type":"array","default":[],"description":"ECMAScript regex that checks absolute file path. If it does not partially match, the file is not added to include path auto-complete. An example is \"/src/\""},"ccls.completion.include.blacklist":{"type":"array","default":[],"description":"ECMAScript regex that checks absolute path. If it partially matches, the file is not added to include path auto-complete. An example is \"/CACHE/\""},"ccls.completion.caseSensitivity":{"type":"integer","default":2,"description":"Case sensitivity when code completion is filtered. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive"},"ccls.completion.detailedLabel":{"type":"boolean","default":false,"description":"When this option is enabled, the completion item label is very detailed, it shows the full signature of the candidate."},"ccls.completion.duplicateOptional":{"type":"boolean","default":false,"description":"For functions with default arguments, generate one more item per default argument."},"ccls.diagnostics.blacklist":{"type":"array","default":[],"description":"Files that match these patterns won't be displayed in diagnostics view."},"ccls.diagnostics.whitelist":{"type":"array","default":[],"description":"Files that match these patterns will be displayed in diagnostics view."},"ccls.diagnostics.onChange":{"type":"integer","default":1000,"description":"Time in milliseconds to wait before computing diagnostics on type. -1: disable diagnostics on type."},"ccls.diagnostics.onOpen":{"type":"integer","default":0,"description":"Time in milliseconds to wait before computing diagnostics when a file is opened."},"ccls.diagnostics.onSave":{"type":"integer","default":0,"description":"Time in milliseconds to wait before computing diagnostics when a file is saved."},"ccls.diagnostics.spellChecking":{"type":"boolean","default":true,"description":"Whether to do spell checking on undefined symbol names when computing diagnostics."},"ccls.highlight.blacklist":{"type":["array","null"],"default":null,"description":"Files that match these patterns won't have semantic highlighting."},"ccls.highlight.whitelist":{"type":["array","null"],"default":null,"description":"Files that match these patterns will have semantic highlighting."},"ccls.highlight.largeFileSize":{"type":["integer","null"],"default":null,"description":"Disable semantic highlighting for files larger than the size."},"ccls.index.initialBlacklist":{"type":"array","default":[],"description":"Files matched by the regexes should not be indexed on initialization. Indexing is deferred to when they are opened."},"ccls.index.initialWhitelist":{"type":"array","default":[],"description":"Files matched by the regexes should be indexed on initialization."},"ccls.index.multiVersion":{"type":"integer","default":0,"description":"If not 0, a file will be indexed in each tranlation unit that includes it."},"ccls.index.onChange":{"type":"boolean","default":false,"description":"Allow indexing on textDocument/didChange. May be too slow for big projects, so it is off by default."},"ccls.index.threads":{"type":"number","default":0,"description":"Number of indexer threads. If 0, 80% of cores are used."},"ccls.index.trackDependency":{"type":"integer","default":2,"description":"Whether to reparse a file if write times of its dependencies have changed. The file will always be reparsed if its own write time changes.\n\n0: no, 1: only during initial load of project, 2: yes"},"ccls.index.maxInitializerLines":{"type":"integer","default":15,"description":"Number of lines of the initializer / macro definition showed in hover."},"ccls.codeLens.renderInline":{"type":"boolean","default":false,"description":"Enables a custom code lens renderer so code lens are displayed inline with code. This removes any vertical-space footprint at the cost of horizontal space."},"ccls.codeLens.localVariables":{"type":"boolean","default":false,"description":"Set to false to hide code lens on parameters and function local variables."},"ccls.treeViews.doubleClickTimeoutMs":{"type":"number","default":500,"description":"If a tree view entry is double-clicked within this timeout value, vscode will navigate to the entry."},"ccls.theme.light.skippedRange.textColor":{"type":"string","default":"rgb(100, 100, 100)","description":"CSS color to apply to text when the code region has been disabled by the preprocessor in a light theme."},"ccls.theme.light.skippedRange.backgroundColor":{"type":"string","default":"rgba(220, 220, 220, 0.3)","description":"CSS color to apply to the background when the code region has been disabled by the preprocessor in a light theme."},"ccls.theme.dark.skippedRange.textColor":{"type":"string","default":"rgb(100, 100, 100)","description":"CSS color to apply to text when the code region has been disabled by the preprocessor in a dark theme."},"ccls.theme.dark.skippedRange.backgroundColor":{"type":"string","default":"rgba(18, 18, 18, 0.3)","description":"CSS color to apply to the background when the code region has been disabled by the preprocessor in a dark theme."},"ccls.completion.enableSnippetInsertion":{"type":"boolean","default":false,"description":"If true, parameter declarations are inserted as snippets in function/method call arguments when completing a function/method call"},"ccls.workspaceSymbol.caseSensitivity":{"type":"integer","default":1,"description":"Case sensitivity when searching workspace symbols. 0: case-insensitive, 1: case-folded, i.e. insensitive if no input character is uppercase, 2: case-sensitive"},"ccls.workspaceSymbol.maxNum":{"type":["number","null"],"default":null,"description":"The maximum number of global search (ie, Ctrl+P + #foo) search results to report. For small search strings on large projects there can be a massive number of results (ie, over 1,000,000) so this limit is important to avoid extremely long delays. null means use the default value provided by the ccls language server."},"ccls.codeLens.enabled":{"type":"boolean","default":true,"description":"Specifies whether the references CodeLens should be shown."},"ccls.statusUpdateInterval":{"type":"integer","default":2000,"description":"Interval between updating ccls status in milliseconds. Set to 0 to disable."},"ccls.trace.websocketEndpointUrl":{"type":"string","default":"","description":"When set, logs all LSP messages to specified WebSocket endpoint."}}}},"uuid":"8e21d425-1e30-4072-8436-786a9017e5c7","isBuiltin":false,"isUnderDevelopment":false,"id":"ccls-project.ccls","identifier":{"value":"ccls-project.ccls","_lower":"ccls-project.ccls"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/ccls-project.ccls-0.1.26","path":"/home/doc/.vscode-oss/extensions/ccls-project.ccls-0.1.26","scheme":"file"}},{"name":"path-intellisense","displayName":"Path Intellisense","description":"Visual Studio Code plugin that autocompletes filenames","version":"1.4.2","publisher":"christian-kohler","engines":{"vscode":"^1.0.0"},"homepage":"https://github.com/ChristianKohler/PathIntellisense","repository":{"type":"git","url":"https://github.com/ChristianKohler/PathIntellisense.git"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"path-intellisense","properties":{"path-intellisense.extensionOnImport":{"type":"boolean","default":false,"description":"Adds the file extension to a import statements"},"path-intellisense.mappings":{"type":"object","default":{},"description":"Mappings for paths"},"path-intellisense.showHiddenFiles":{"type":"boolean","default":false,"description":"Show hidden files"},"path-intellisense.autoSlashAfterDirectory":{"type":"boolean","default":false,"description":"Automatically adds slash after directory"},"path-intellisense.absolutePathToWorkspace":{"type":"boolean","default":true,"description":"Sets an absolute path to the current workspace"}}}},"main":"/home/doc/.vscode-oss/extensions/christian-kohler.path-intellisense-1.4.2/out/src/extension","icon":"icon/path-intellisense.png","scripts":{"vscode:prepublish":"node ./node_modules/vscode/bin/compile","compile":"node ./node_modules/vscode/bin/compile -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/minimatch":"^2.0.29","typescript":"^2.3.2","vscode":"^0.11.0"},"dependencies":{"minimatch":"^3.0.4"},"uuid":"a41c1549-4053-44d4-bf30-60fc809b4a86","isBuiltin":false,"isUnderDevelopment":false,"id":"christian-kohler.path-intellisense","identifier":{"value":"christian-kohler.path-intellisense","_lower":"christian-kohler.path-intellisense"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/christian-kohler.path-intellisense-1.4.2","path":"/home/doc/.vscode-oss/extensions/christian-kohler.path-intellisense-1.4.2","scheme":"file"}},{"name":"spacemacs","displayName":"Spacemacs","description":"Spacemacs themes for Visual Studio Code","version":"1.1.1","publisher":"cometeer","engines":{"vscode":"^1.12.0"},"categories":["Themes"],"contributes":{"themes":[{"label":"Spacemacs - light","uiTheme":"vs","path":"./themes/Spacemacs-light-color-theme.json"},{"label":"Spacemacs - dark","uiTheme":"vs-dark","path":"./themes/Spacemacs-dark-color-theme.json"}]},"repository":{"type":"git","url":"git+https://github.com/cometeer/spacemacs-vscode.git"},"keywords":["vs-code","theme","spacemacs"],"author":"cometeer","license":"ISC","bugs":{"url":"https://github.com/cometeer/spacemacs-vscode/issues"},"homepage":"https://github.com/cometeer/spacemacs-vscode#readme","icon":"assets/icon.png","uuid":"5377d680-e3f1-43bc-a2a8-0386b693b58b","isBuiltin":false,"isUnderDevelopment":false,"id":"cometeer.spacemacs","identifier":{"value":"cometeer.spacemacs","_lower":"cometeer.spacemacs"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/cometeer.spacemacs-1.1.1","path":"/home/doc/.vscode-oss/extensions/cometeer.spacemacs-1.1.1","scheme":"file"}},{"name":"vscode-eslint","displayName":"ESLint","description":"Integrates ESLint JavaScript into VS Code.","version":"1.8.2","author":"Microsoft Corporation","license":"MIT","repository":{"type":"git","url":"https://github.com/Microsoft/vscode-eslint.git"},"bugs":{"url":"https://github.com/Microsoft/vscode-eslint/issues"},"publisher":"dbaeumer","icon":"eslint_icon.png","categories":["Programming Languages","Linters"],"keywords":["multi-root ready"],"engines":{"vscode":"^1.31.0"},"activationEvents":["*"],"main":"/home/doc/.vscode-oss/extensions/dbaeumer.vscode-eslint-1.8.2/client/out/extension","contributes":{"configuration":{"type":"object","title":"ESLint","properties":{"eslint.enable":{"scope":"resource","type":"boolean","default":true,"description":"Controls whether eslint is enabled for JavaScript files or not."},"eslint.packageManager":{"scope":"resource","type":"string","enum":["npm","yarn","pnpm"],"default":"npm","description":"The package manager you use to install node modules."},"eslint.alwaysShowStatus":{"type":"boolean","default":false,"description":"Always show the ESlint status bar item.","scope":"window"},"eslint.nodePath":{"scope":"resource","type":["string","null"],"default":null,"description":"A path added to NODE_PATH when resolving the eslint module."},"eslint.options":{"scope":"resource","type":"object","default":{},"description":"The eslint options object to provide args normally passed to eslint when executed from a command line (see http://eslint.org/docs/developer-guide/nodejs-api#cliengine)."},"eslint.trace.server":{"scope":"window","anyOf":[{"type":"string","enum":["off","messages","verbose"],"default":"off"},{"type":"object","properties":{"verbosity":{"type":"string","enum":["off","messages","verbose"],"default":"off"},"format":{"type":"string","enum":["text","json"],"default":"text"}}}],"default":"off","description":"Traces the communication between VSCode and the eslint linter service."},"eslint.run":{"scope":"resource","type":"string","enum":["onSave","onType"],"default":"onType","description":"Run the linter on save (onSave) or on type (onType)"},"eslint.autoFixOnSave":{"scope":"resource","type":"boolean","default":false,"description":"Turns auto fix on save on or off."},"eslint.workingDirectories":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"directory":{"type":"string","description":"The working directory to use if a file's path start with this directory."},"changeProcessCWD":{"type":"boolean","description":"Whether the process's cwd should be changed as well."}}}]}},"eslint.validate":{"scope":"resource","type":"array","items":{"anyOf":[{"type":"string"},{"type":"object","properties":{"language":{"type":"string","description":"The language id to be validated by ESLint"},"autoFix":{"type":"boolean","description":"Whether auto fixes are provided for the language"}}}]},"default":["javascript","javascriptreact"],"description":"An array of language ids which should be validated by ESLint"},"eslint.provideLintTask":{"scope":"resource","type":"boolean","default":false,"description":"Controls whether a task for linting the whole workspace will be available."},"eslint.runtime":{"scope":"window","type":["string","null"],"default":null,"description":"The location of the node binary to run ESLint under."},"eslint.codeAction.disableRuleComment":{"scope":"resource","type":"object","default":{"enable":true,"location":"newLine"},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the disable code actions."},"location":{"type":"string","enum":["separateLine","sameLine"],"default":"newLine","description":"Configure the disable rule code action to insert the comment on the same line or a new line."}}},"eslint.codeAction.showDocumentation":{"scope":"resource","type":"object","default":{"enable":true},"properties":{"enable":{"type":"boolean","default":true,"description":"Show the documentation code actions."}}}}},"commands":[{"title":"Fix all auto-fixable Problems","category":"ESLint","command":"eslint.executeAutofix"},{"title":"Create ESLint configuration","category":"ESLint","command":"eslint.createConfig"},{"title":"Enable ESLint","category":"ESLint","command":"eslint.enable"},{"title":"Disable ESLint","category":"ESLint","command":"eslint.disable"},{"title":"Show Output Channel","category":"ESLint","command":"eslint.showOutputChannel"}],"jsonValidation":[{"fileMatch":".eslintrc","url":"http://json.schemastore.org/eslintrc"},{"fileMatch":".eslintrc.json","url":"http://json.schemastore.org/eslintrc"}],"languages":[{"id":"ignore","filenames":[".eslintignore"]}]},"scripts":{"vscode:prepublish":"cd client && npm run update-vscode && cd .. && npm run webpack","webpack":"npm run clean && webpack --mode production --config ./client/webpack.config.js && webpack --mode production --config ./server/webpack.config.js","webpack:dev":"npm run clean && webpack --mode none --config ./client/webpack.config.js && webpack --mode none --config ./server/webpack.config.js","compile":"tsc -b","compile:client":"tsc -b ./client/tsconfig.json","compile:server":"tsc -b ./server/tsconfig.json","watch":"tsc -b -w","clean":"rimraf client/out && rimraf server/out","postinstall":"cd client && npm install && cd ../server && npm install && cd .."},"devDependencies":{"typescript":"^3.2.4","@types/node":"^8.0.0","tslint":"^5.11.0","webpack":"^4.29.6","webpack-cli":"^3.2.3","ts-loader":"^5.3.3","merge-options":"^1.0.1","rimraf":"^2.6.3"},"uuid":"583b2b34-2c1e-4634-8c0b-0b82e283ea3a","isBuiltin":false,"isUnderDevelopment":false,"id":"dbaeumer.vscode-eslint","identifier":{"value":"dbaeumer.vscode-eslint","_lower":"dbaeumer.vscode-eslint"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/dbaeumer.vscode-eslint-1.8.2","path":"/home/doc/.vscode-oss/extensions/dbaeumer.vscode-eslint-1.8.2","scheme":"file"}},{"name":"gitlens","displayName":"GitLens — Git supercharged","description":"Supercharge the Git capabilities built into Visual Studio Code — Visualize code authorship at a glance via Git blame annotations and code lens, seamlessly navigate and explore Git repositories, gain valuable insights via powerful comparison commands, and so much more","version":"9.6.3","author":{"name":"Eric Amodio","email":"eamodio@gmail.com"},"publisher":"eamodio","license":"SEE LICENSE IN LICENSE","homepage":"https://github.com/eamodio/vscode-gitlens/blob/master/README.md","bugs":{"url":"https://github.com/eamodio/vscode-gitlens/issues"},"repository":{"type":"git","url":"https://github.com/eamodio/vscode-gitlens.git"},"engines":{"vscode":"^1.30.0"},"main":"/home/doc/.vscode-oss/extensions/eamodio.gitlens-9.6.3/dist/extension","icon":"images/gitlens-icon.png","preview":false,"badges":[{"url":"https://img.shields.io/badge/vscode--dev--community-gitlens-blue.svg?logo=slack","href":"https://vscode-slack.amod.io","description":"Join us in the #gitlens channel"}],"categories":["Other"],"galleryBanner":{"color":"#8647ae","theme":"dark"},"keywords":["gitlens","git","blame","log","annotation","multi-root ready"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"GitLens","properties":{"gitlens.blame.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in the gutter blame annotations","scope":"window"},"gitlens.blame.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (deduplicate) matching adjacent gutter blame annotations","scope":"window"},"gitlens.blame.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) in gutter blame annotations. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.blame.format":{"type":"string","default":"${message|40?} ${agoOrDate|14-}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.blame.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.blame.heatmap.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a heatmap indicator in the gutter blame annotations","scope":"window"},"gitlens.blame.heatmap.location":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Adds a heatmap indicator on the left edge of the gutter blame annotations","Adds a heatmap indicator on the right edge of the gutter blame annotations"],"markdownDescription":"Specifies where the heatmap indicators will be shown in the gutter blame annotations","scope":"window"},"gitlens.blame.highlight.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to highlight lines associated with the current line","scope":"window"},"gitlens.blame.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the associated line highlights will be shown","scope":"window"},"gitlens.blame.ignoreWhitespace":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to ignore whitespace when comparing revisions during blame operations","scope":"resource"},"gitlens.blame.separateLines":{"type":"boolean","default":true,"markdownDescription":"Specifies whether gutter blame annotations will be separated by a small gap","scope":"window"},"gitlens.blame.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter blame annotations will be toggled","scope":"window"},"gitlens.codeLens.authors.command":{"type":"string","default":"gitlens.toggleFileBlame","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when an _authors_ code lens is clicked","scope":"window"},"gitlens.codeLens.authors.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide an _authors_ code lens, showing number of authors of the file or code block and the most prominent author (if there is more than one)","scope":"window"},"gitlens.codeLens.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any Git code lens, by default. Use the `Toggle Git Code Lens` command (`gitlens.toggleCodeLens`) to toggle the Git code lens on and off for the current window","scope":"window"},"gitlens.codeLens.includeSingleLineSymbols":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to provide any Git code lens on symbols that span only a single line","scope":"window"},"gitlens.codeLens.recentChange.command":{"type":"string","default":"gitlens.showQuickCommitFileDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current committed file with the previous commit","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when a _recent change_ code lens is clicked","scope":"window"},"gitlens.codeLens.recentChange.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _recent change_ code lens, showing the author and date of the most recent commit for the file or code block","scope":"window"},"gitlens.codeLens.scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, etc) lines"]},"minItems":1,"maxItems":4,"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document","scope":"resource"},"gitlens.codeLens.scopesByLanguage":{"type":"array","default":[{"language":"azure-pipelines","scopes":["document"]},{"language":"css","scopes":["document"]},{"language":"html","scopes":["document"]},{"language":"json","scopes":["document"]},{"language":"jsonc","scopes":["document"]},{"language":"less","scopes":["document"]},{"language":"postcss","scopes":["document"]},{"language":"python","symbolScopes":["!Module"]},{"language":"scss","scopes":["document"]},{"language":"stylus","scopes":["document"]},{"language":"vue","scopes":["document"]},{"language":"yaml","scopes":["document"]}],"items":{"type":"object","required":["language"],"properties":{"language":{"type":"string","description":"Specifies the language to which this code lens override applies"},"scopes":{"type":"array","default":["document","containers"],"items":{"type":"string","enum":["document","containers","blocks","custom"],"enumDescriptions":["Adds code lens at the top of the document","Adds code lens at the start of container-like symbols (modules, classes, interfaces, etc)","Adds code lens at the start of block-like symbols (functions, methods, properties, etc) lines","Adds code lens at the start of symbols contained in `symbolScopes`"]},"minItems":1,"maxItems":4,"uniqueItems":true,"description":"Specifies where Git code lens will be shown in the document for the specified language"},"symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"description":"Specifies the set of document symbols where Git code lens will be shown in the document for the specified language. Must be a member of `SymbolKind`"}}},"uniqueItems":true,"markdownDescription":"Specifies where Git code lens will be shown in the document for the specified languages","scope":"resource"},"gitlens.codeLens.symbolScopes":{"type":"array","items":{"type":"string"},"uniqueItems":true,"markdownDescription":"Specifies a set of document symbols where Git code lens will or will not be shown in the document. Prefix with `!` to avoid providing a Git code lens for the symbol. Must be a member of `SymbolKind`","scope":"resource"},"gitlens.currentLine.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how to format absolute dates (using the `${date}` token) for the current line blame annotation. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a blame annotation for the current line, by default. Use the `Toggle Line Blame Annotations` command (`gitlens.toggleLineBlame`) to toggle the annotations on and off for the current window","scope":"window"},"gitlens.currentLine.format":{"type":"string","default":"${authorAgoOrDate} • ${message}","markdownDescription":"Specifies the format of the current line blame annotation. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.currentLine.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.currentLine.scrollable":{"type":"boolean","default":true,"markdownDescription":"Specifies whether the current line blame annotation can be scrolled into view when it is outside the viewport","scope":"window"},"gitlens.debug":{"type":"boolean","default":false,"markdownDescription":"Specifies debug mode","scope":"window"},"gitlens.defaultDateFormat":{"type":"string","default":null,"markdownDescription":"Specifies how absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateShortFormat":{"type":"string","default":null,"markdownDescription":"Specifies how short absolute dates will be formatted by default. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.defaultDateStyle":{"type":"string","default":"relative","enum":["relative","absolute"],"enumDescriptions":["e.g. 1 day ago","e.g. July 25th, 2018 7:18pm"],"markdownDescription":"Specifies how dates will be displayed by default","scope":"window"},"gitlens.defaultGravatarsStyle":{"type":"string","default":"robohash","enum":["identicon","mp","monsterid","retro","robohash","wavatar"],"enumDescriptions":["A geometric pattern","A simple, cartoon-style silhouetted outline of a person (does not vary by email hash)","A monster with different colors, faces, etc","8-bit arcade-style pixelated faces","A robot with different colors, faces, etc","A face with differing features and backgrounds"],"markdownDescription":"Specifies the style of the gravatar default (fallback) images","scope":"window"},"gitlens.heatmap.ageThreshold":{"type":"string","default":"90","markdownDescription":"Specifies the age of the most recent change (in days) after which the gutter heatmap annotations will be cold rather than hot (i.e. will use `#gitlens.heatmap.coldColor#` instead of `#gitlens.heatmap.hotColor#`)","scope":"window"},"gitlens.heatmap.coldColor":{"type":"string","default":"#0a60f6","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is older (cold) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.hotColor":{"type":"string","default":"#f66a0a","markdownDescription":"Specifies the base color of the gutter heatmap annotations when the most recent change is newer (hot) than the `#gitlens.heatmap.ageThreshold#` value","scope":"window"},"gitlens.heatmap.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the gutter heatmap annotations will be toggled","scope":"window"},"gitlens.hovers.annotations.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for all lines when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers when showing blame annotations","scope":"window"},"gitlens.hovers.annotations.over":{"type":"string","default":"line","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers when showing blame annotations","scope":"window"},"gitlens.hovers.currentLine.changes":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _changes (diff)_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.details":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide a _commit details_ hover for the current line","scope":"window"},"gitlens.hovers.currentLine.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers for the current line","scope":"window"},"gitlens.hovers.currentLine.over":{"type":"string","default":"annotation","enum":["annotation","line"],"enumDescriptions":["Only shown when hovering over the line annotation","Shown when hovering anywhere over the line"],"markdownDescription":"Specifies when to trigger hovers for the current line","scope":"window"},"gitlens.hovers.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images in hovers","scope":"window"},"gitlens.hovers.changesDiff":{"type":"string","default":"line","enum":["line","hunk"],"enumDescriptions":["Shows only the changes to the line","Shows the set of related changes"],"markdownDescription":"Specifies whether to show just the changes to the line or the set of related changes in the _changes (diff)_ hover","scope":"window"},"gitlens.hovers.detailsMarkdownFormat":{"type":"string","default":"[${avatar} &nbsp;__${author}__](mailto:${email}), ${ago} &nbsp; _(${date})_ \n\n${message}\n\n${commands}","markdownDescription":"Specifies the format (in markdown) of the _commit details_ hover. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`\n - `${avatar}` &mdash; commit author avatar\n - `${commands}` &mdash; a set of commit commands","scope":"window"},"gitlens.hovers.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide any hovers","scope":"window"},"gitlens.insiders":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to enable experimental features","scope":"window"},"gitlens.keymap":{"type":"string","default":"chorded","enum":["alternate","chorded","none"],"enumDescriptions":["Adds an alternate set of shortcut keys that start with `Alt` (⌥ on macOS)","Adds a chorded set of shortcut keys that start with `Ctrl+Alt+G` (`⌥⌘G` on macOS)","No shortcut keys will be added"],"markdownDescription":"Specifies the keymap to use for GitLens shortcut keys","scope":"window"},"gitlens.liveshare.allowGuestAccess":{"type":"boolean","default":true,"description":"Specifies whether to allow guest access to GitLens features when using Visual Studio Live Share","scope":"window"},"gitlens.menus":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"editor":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"details":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"editorGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"blame":{"type":"boolean"},"compare":{"type":"boolean"}}}]},"editorTab":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"explorer":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"}}}]},"scmGroup":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"compare":{"type":"boolean"},"openClose":{"type":"boolean"},"stash":{"type":"boolean"},"stashInline":{"type":"boolean"}}}]},"scmItem":{"anyOf":[{"enum":[false]},{"type":"object","properties":{"clipboard":{"type":"boolean"},"compare":{"type":"boolean"},"history":{"type":"boolean"},"remote":{"type":"boolean"},"stash":{"type":"boolean"}}}]}}}],"default":{"editor":{"blame":false,"clipboard":true,"compare":true,"details":false,"history":false,"remote":false},"editorGroup":{"blame":true,"compare":true},"editorTab":{"clipboard":true,"compare":true,"history":true,"remote":true},"explorer":{"clipboard":true,"compare":true,"history":true,"remote":true},"scmGroup":{"compare":true,"openClose":true,"stash":true,"stashInline":true},"scmItem":{"clipboard":true,"compare":true,"history":true,"remote":true,"stash":true}},"markdownDescription":"Specifies which commands will be added to which menus","scope":"window"},"gitlens.mode.active":{"type":"string","markdownDescription":"Specifies the active GitLens mode, if any","scope":"window"},"gitlens.mode.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide the active GitLens mode in the status bar","scope":"window"},"gitlens.mode.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the active GitLens mode alignment in the status bar","scope":"window"},"gitlens.modes":{"type":"object","properties":{"zen":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"review":{"type":"object","properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}}},"additionalProperties":{"type":"object","required":["name"],"properties":{"name":{"type":"string","description":"Specifies the friendly name of this user-defined mode"},"statusBarItemName":{"type":"string","description":"Specifies the name shown in the status bar when this user-defined mode is active"},"description":{"type":"string","description":"Specifies the description of this user-defined mode"},"annotations":{"type":"string","enum":["blame","heatmap","recentChanges"],"enumDescriptions":["Shows the gutter blame annotations","Shows the gutter heatmap annotations","Shows the recently changed lines annotations"],"description":"Specifies which (if any) file annotations will be shown when this user-defined mode is active"},"codeLens":{"type":"boolean","description":"Specifies whether to show any Git code lens when this user-defined mode is active"},"currentLine":{"type":"boolean","description":"Specifies whether to show a blame annotation for the current line when this user-defined mode is active"},"hovers":{"type":"boolean","description":"Specifies whether to show any hovers when this user-defined mode is active"},"statusBar":{"type":"boolean","description":"Specifies whether to show blame information in the status bar when this user-defined mode is active"},"views":{"type":"boolean","description":"Specifies whether to show any GitLens views when this user-defined mode is active"}}},"default":{"zen":{"name":"Zen","statusBarItemName":"Zen","description":"for a zen-like experience, disables many visual features","codeLens":false,"currentLine":false,"hovers":false,"statusBar":false},"review":{"name":"Review","statusBarItemName":"Reviewing","description":"for reviewing code, enables many visual features","codeLens":true,"currentLine":true,"hovers":true}},"markdownDescription":"Specifies the user-defined GitLens modes","scope":"window"},"gitlens.outputLevel":{"type":"string","default":"errors","enum":["silent","errors","verbose","debug"],"enumDescriptions":["Logs nothing","Logs only errors","Logs all errors, warnings, and messages","Logs all errors, warnings, and messages with extra context useful for debugging"],"markdownDescription":"Specifies how much (if any) output will be sent to the GitLens output channel","scope":"window"},"gitlens.recentChanges.highlight.locations":{"type":"array","default":["gutter","line","overview"],"items":{"type":"string","enum":["gutter","line","overview"],"enumDescriptions":["Adds a gutter glyph","Adds a full-line highlight background color","Adds a decoration to the overview ruler (scroll bar)"]},"minItems":1,"maxItems":3,"uniqueItems":true,"markdownDescription":"Specifies where the highlights of the recently changed lines will be shown","scope":"window"},"gitlens.recentChanges.toggleMode":{"type":"string","default":"file","enum":["file","window"],"enumDescriptions":["Toggles each file individually","Toggles the window, i.e. all files at once"],"markdownDescription":"Specifies how the recently changed lines annotations will be toggled","scope":"window"},"gitlens.remotes":{"type":"array","default":null,"items":{"type":"object","required":["type","domain"],"properties":{"type":{"type":"string","enum":["Bitbucket","BitbucketServer","Custom","GitHub","GitLab"],"description":"Specifies the type of the custom remote service"},"domain":{"type":"string","description":"Specifies the domain name of the custom remote service"},"name":{"type":"string","description":"Specifies an optional friendly name for the custom remote service"},"protocol":{"type":"string","default":"https","description":"Specifies an optional url protocol for the custom remote service"},"urls":{"type":"object","required":["repository","branches","branch","commit","file","fileInCommit","fileInBranch","fileLine","fileRange"],"properties":{"repository":{"type":"string","description":"Specifies the format of a respository url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path"},"branches":{"type":"string","description":"Specifies the format of a branches url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"branch":{"type":"string","description":"Specifies the format of a branch url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${branch}` &mdash; branch"},"commit":{"type":"string","description":"Specifies the format of a commit url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${id}` &mdash; commit id"},"file":{"type":"string","description":"Specifies the format of a file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${line}` &mdash; formatted line information"},"fileInBranch":{"type":"string","description":"Specifies the format of a branch file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${branch}` &mdash; branch\n ${line}` &mdash; formatted line information"},"fileInCommit":{"type":"string","description":"Specifies the format of a commit file url for the custom remote service\nAvailable tokens\n ${repo}` &mdash; repository path\n ${file}` &mdash; file name\n ${id}` &mdash; commit id\n ${line}` &mdash; formatted line information"},"fileLine":{"type":"string","description":"Specifies the format of a line in a file url for the custom remote service\nAvailable tokens\n ${line}` &mdash; line"},"fileRange":{"type":"string","description":"Specifies the format of a range in a file url for the custom remote service\nAvailable tokens\n ${start}` &mdash; starting line\n ${end}` &mdash; ending line"}}},"description":"Specifies the url formats of the custom remote service"}},"uniqueItems":true,"markdownDescription":"Specifies user-defined remote (code-hosting) services or custom domains for built-in remote services","scope":"resource"},"gitlens.settings.mode":{"type":"string","default":"simple","enum":["simple","advanced"],"enumDescriptions":["Only displays common settings","Displays all settings"],"markdownDescription":"Specifies the display mode of the interactive settings editor","scope":"window"},"gitlens.showWhatsNewAfterUpgrades":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show What's New after upgrading to new feature releases","scope":"window"},"gitlens.statusBar.alignment":{"type":"string","default":"right","enum":["left","right"],"enumDescriptions":["Aligns to the left","Aligns to the right"],"markdownDescription":"Specifies the blame alignment in the status bar","scope":"window"},"gitlens.statusBar.command":{"type":"string","default":"gitlens.showQuickCommitDetails","enum":["gitlens.toggleFileBlame","gitlens.diffWithPrevious","gitlens.diffWithWorking","gitlens.toggleCodeLens","gitlens.showQuickCommitDetails","gitlens.showQuickCommitFileDetails","gitlens.showQuickFileHistory","gitlens.showQuickRepoHistory"],"enumDescriptions":["Toggles file blame annotations","Compares the current line commit with the previous","Compares the current line commit with the working tree","Toggles Git code lens","Shows a commit details quick pick","Shows a commit file details quick pick","Shows a file history quick pick","Shows a branch history quick pick"],"markdownDescription":"Specifies the command to be executed when the blame status bar item is clicked","scope":"window"},"gitlens.statusBar.dateFormat":{"type":"string","default":null,"markdownDescription":"Specifies the date format of absolute dates shown in the blame information in the status bar. See the [Moment.js docs](https://momentjs.com/docs/#/displaying/format/) for valid formats","scope":"window"},"gitlens.statusBar.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to provide blame information in the status bar","scope":"window"},"gitlens.statusBar.format":{"type":"string","default":"${authorAgoOrDate}","markdownDescription":"Specifies the format of the gutter blame annotations. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.statusBar.dateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.statusBar.reduceFlicker":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to avoid clearing the previous blame information when changing lines to reduce status bar \"flashing\"","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeAndAuthors":{"type":"string","default":"Unsaved changes (cannot determine recent change or authors)","markdownDescription":"Specifies the string to be shown in place of both the _recent change_ and _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.recentChangeOnly":{"type":"string","default":"Unsaved changes (cannot determine recent change)","markdownDescription":"Specifies the string to be shown in place of the _recent change_ code lens when there are unsaved changes","scope":"window"},"gitlens.strings.codeLens.unsavedChanges.authorsOnly":{"type":"string","default":"Unsaved changes (cannot determine authors)","markdownDescription":"Specifies the string to be shown in place of the _authors_ code lens when there are unsaved changes","scope":"window"},"gitlens.views.commitFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.commitFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.commitDescriptionFormat":{"type":"string","default":"${changes  •  }${authorAgoOrDate}","markdownDescription":"Specifies the description format of committed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.compare.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Compare_ view","scope":"window"},"gitlens.views.compare.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Compare_ view","scope":"window"},"gitlens.views.compare.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.compare.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.compare.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Compare_ view will display files","scope":"window"},"gitlens.views.compare.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Compare_ view. Only applies when `#gitlens.views.compare.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.compare.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Compare_ view","scope":"window"},"gitlens.views.defaultItemLimit":{"type":"number","default":10,"markdownDescription":"Specifies the default number of items to show in a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.pageItemLimit":{"type":"number","default":20,"markdownDescription":"Specifies the number of items to show in a each page when paginating a view list. Use 0 to specify no limit","scope":"window"},"gitlens.views.fileHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _File History_ view","scope":"window"},"gitlens.views.fileHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _File History_ view","scope":"window"},"gitlens.views.fileHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _File History_ view","scope":"window"},"gitlens.views.lineHistory.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of status icons in the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Line History_ view","scope":"window"},"gitlens.views.lineHistory.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Line History_ view","scope":"window"},"gitlens.views.repositories.autoRefresh":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically refresh the _Repositories_ view when the repository or the file system changes","scope":"window"},"gitlens.views.repositories.autoReveal":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to automatically reveal repositories in the _Repositories_ view when opening files","scope":"window"},"gitlens.views.repositories.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.branches.layout":{"type":"string","default":"tree","enum":["list","tree"],"enumDescriptions":["Displays branches as a list","Displays branches as a tree when branch names contain slashes `/`"],"markdownDescription":"Specifies how the _Repositories_ view will display branches","scope":"window"},"gitlens.views.repositories.compact":{"type":"boolean","default":false,"markdownDescription":"Specifies whether to show the _Repositories_ view in a compact display density","scope":"window"},"gitlens.views.repositories.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.repositories.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.repositories.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Repositories_ view will display files","scope":"window"},"gitlens.views.repositories.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Repositories_ view. Only applies when `#gitlens.views.repositories.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.repositories.includeWorkingTree":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to include working tree file status for each repository in the _Repositories_ view","scope":"window"},"gitlens.views.repositories.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Repositories_ view","scope":"window"},"gitlens.views.repositories.showTrackingBranch":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the tracking branch when displaying local branches in the _Repositories_ view","scope":"window"},"gitlens.views.search.avatars":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show avatar images instead of commit (or status) icons in the _Search Commits_ view","scope":"window"},"gitlens.views.search.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show the _Search Commits_ view","scope":"window"},"gitlens.views.search.files.compact":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to compact (flatten) unnecessary file nesting in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `tree` or `auto`","scope":"window"},"gitlens.views.search.files.layout":{"type":"string","default":"auto","enum":["auto","list","tree"],"enumDescriptions":["Automatically switches between displaying files as a `tree` or `list` based on the `#gitlens.views.search.files.threshold#` value and the number of files at each nesting level","Displays files as a list","Displays files as a tree"],"markdownDescription":"Specifies how the _Search Commits_ view will display files","scope":"window"},"gitlens.views.search.files.threshold":{"type":"number","default":5,"markdownDescription":"Specifies when to switch between displaying files as a `tree` or `list` based on the number of files in a nesting level in the _Search Commits_ view. Only applies when `#gitlens.views.search.files.layout#` is set to `auto`","scope":"window"},"gitlens.views.search.location":{"type":"string","default":"gitlens","enum":["gitlens","explorer","scm"],"enumDescriptions":["Adds to the GitLens side bar","Adds to the Explorer side bar","Adds to the Source Control side bar"],"markdownDescription":"Specifies where to show the _Search Commits_ view","scope":"window"},"gitlens.views.showRelativeDateMarkers":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to show relative date markers (_Less than a week ago_, _Over a week ago_, _Over a month ago_, etc) on revision (commit) histories in the views","scope":"window"},"gitlens.views.stashFileFormat":{"type":"string","default":"${file}","markdownDescription":"Specifies the format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of a stashed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path","scope":"window"},"gitlens.views.stashFormat":{"type":"string","default":"${message}","markdownDescription":"Specifies the format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.stashDescriptionFormat":{"type":"string","default":"${changes  •  }${agoOrDate}","markdownDescription":"Specifies the description format of stashed changes in the views. See the [GitLens docs](https://github.com/eamodio/vscode-gitlens/wiki/Advanced-Formatting) for advanced formatting\n- Available tokens\n - `${id}` &mdash; commit id\n - `${author}` &mdash; commit author\n - `${email}` &mdash; commit author e-mail\n - `${message}` &mdash; commit message\n - `${ago}` &mdash; relative commit date (e.g. 1 day ago)\n - `${date}` &mdash; formatted commit date (format specified by `#gitlens.defaultDateFormat#`)\n - `${agoOrDate}` &mdash; commit date specified by `#gitlens.defaultDateStyle#`\n - `${authorAgo}` &mdash; commit author, relative commit date\n - `${authorAgoOrDate}` &mdash; commit author, commit date specified by `#gitlens.defaultDateStyle#`","scope":"window"},"gitlens.views.statusFileFormat":{"type":"string","default":"${working  }${file}","markdownDescription":"Specifies the format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.views.statusFileDescriptionFormat":{"type":"string","default":"${directory}","markdownDescription":"Specifies the description format of the status of a working or committed file in the views\n- Available tokens\n - `${directory}` &mdash; directory name\n - `${file}` &mdash; file name\n - `${filePath}` &mdash; formatted file name and path\n - `${path}` &mdash; full file path\n - `${working}` &mdash; optional indicator if the file is uncommitted","scope":"window"},"gitlens.advanced.abbreviatedShaLength":{"type":"number","default":"7","markdownDescription":"Specifies the length of abbreviated commit ids (shas)","scope":"window"},"gitlens.advanced.blame.customArguments":{"type":"array","default":null,"items":{"type":"string"},"markdownDescription":"Specifies additional arguments to pass to the `git blame` command","scope":"resource"},"gitlens.advanced.blame.delayAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the time (in milliseconds) to wait before re-blaming an unsaved document after an edit. Use 0 to specify an infinite wait","scope":"window"},"gitlens.advanced.blame.sizeThresholdAfterEdit":{"type":"number","default":5000,"markdownDescription":"Specifies the maximum document size (in lines) allowed to be re-blamed after an edit while still unsaved. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.caching.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether git output will be cached — changing the default is not recommended","scope":"window"},"gitlens.advanced.fileHistoryFollowsRenames":{"type":"boolean","default":true,"markdownDescription":"Specifies whether file histories will follow renames — will affect how merge commits are shown in histories","scope":"window"},"gitlens.advanced.maxListItems":{"type":"number","default":200,"markdownDescription":"Specifies the maximum number of items to show in a list. Use 0 to specify no maximum","scope":"window"},"gitlens.advanced.messages":{"type":"object","default":{"suppressCommitHasNoPreviousCommitWarning":false,"suppressCommitNotFoundWarning":false,"suppressFileNotUnderSourceControlWarning":false,"suppressGitDisabledWarning":false,"suppressGitVersionWarning":false,"suppressLineUncommittedWarning":false,"suppressNoRepositoryWarning":false,"suppressSupportGitLensNotification":false},"properties":{"suppressCommitHasNoPreviousCommitWarning":{"type":"boolean","default":false},"suppressCommitNotFoundWarning":{"type":"boolean","default":false},"suppressFileNotUnderSourceControlWarning":{"type":"boolean","default":false},"suppressGitDisabledWarning":{"type":"boolean","default":false},"suppressGitVersionWarning":{"type":"boolean","default":false},"suppressLineUncommittedWarning":{"type":"boolean","default":false},"suppressNoRepositoryWarning":{"type":"boolean","default":false},"suppressSupportGitLensNotification":{"type":"boolean","default":false}},"markdownDescription":"Specifies which messages should be suppressed","scope":"window"},"gitlens.advanced.quickPick.closeOnFocusOut":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to close QuickPick menus when focus is lost","scope":"window"},"gitlens.advanced.repositorySearchDepth":{"type":"number","default":1,"markdownDescription":"Specifies how many folders deep to search for repositories","scope":"resource"},"gitlens.advanced.telemetry.enabled":{"type":"boolean","default":true,"markdownDescription":"Specifies whether to enable GitLens telemetry (even if enabled still abides by the overall `#telemetry.enableTelemetry#` setting","scope":"window"}}},"colors":[{"id":"gitlens.gutterBackgroundColor","description":"Specifies the background color of the gutter blame annotations","defaults":{"dark":"#FFFFFF13","light":"#0000000C","highContrast":"#FFFFFF13"}},{"id":"gitlens.gutterForegroundColor","description":"Specifies the foreground color of the gutter blame annotations","defaults":{"dark":"#BEBEBE","light":"#747474","highContrast":"#BEBEBE"}},{"id":"gitlens.gutterUncommittedForegroundColor","description":"Specifies the foreground color of an uncommitted line in the gutter blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF2FF"}},{"id":"gitlens.trailingLineBackgroundColor","description":"Specifies the background color of the blame annotation for the current line","defaults":{"dark":"#00000000","light":"#00000000","highContrast":"#00000000"}},{"id":"gitlens.trailingLineForegroundColor","description":"Specifies the foreground color of the blame annotation for the current line","defaults":{"dark":"#99999959","light":"#99999959","highContrast":"#99999999"}},{"id":"gitlens.lineHighlightBackgroundColor","description":"Specifies the background color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF233","light":"#00BCF233","highContrast":"#00BCF233"}},{"id":"gitlens.lineHighlightOverviewRulerColor","description":"Specifies the overview ruler color of the associated line highlights in blame annotations","defaults":{"dark":"#00BCF299","light":"#00BCF299","highContrast":"#00BCF299"}}],"commands":[{"command":"gitlens.supportGitLens","title":"Support GitLens ❤","category":"GitLens","icon":{"dark":"images/dark/icon-heart.svg","light":"images/light/icon-heart.svg"}},{"command":"gitlens.showSettingsPage","title":"Open Settings","category":"GitLens","icon":{"dark":"images/dark/icon-gear.svg","light":"images/light/icon-gear.svg"}},{"command":"gitlens.showWelcomePage","title":"Welcome","category":"GitLens"},{"command":"gitlens.showCompareView","title":"Show Compare View","category":"GitLens"},{"command":"gitlens.showFileHistoryView","title":"Show File History View","category":"GitLens"},{"command":"gitlens.showLineHistoryView","title":"Show Line History View","category":"GitLens"},{"command":"gitlens.showRepositoriesView","title":"Show Repositories View","category":"GitLens"},{"command":"gitlens.showSearchView","title":"Show Search Commits View","category":"GitLens"},{"command":"gitlens.diffDirectory","title":"Directory Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffDirectoryWithHead","title":"Directory Compare All Changes","category":"GitLens"},{"command":"gitlens.diffHeadWith","title":"Compare HEAD with...","category":"GitLens"},{"command":"gitlens.diffWorkingWith","title":"Compare Working Tree with...","category":"GitLens"},{"command":"gitlens.diffWithRef","title":"Open Changes with...","category":"GitLens"},{"command":"gitlens.diffWithNext","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithNextInDiff","title":"Open Changes with Next Revision","category":"GitLens","icon":{"dark":"images/dark/icon-next-commit.svg","light":"images/light/icon-next-commit.svg"}},{"command":"gitlens.diffWithPrevious","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffWithPreviousInDiff","title":"Open Changes with Previous Revision","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit.svg","light":"images/light/icon-prev-commit.svg"}},{"command":"gitlens.diffLineWithPrevious","title":"Open Line Changes with Previous Revision","category":"GitLens"},{"command":"gitlens.diffWithRevision","title":"Open Changes with Revision...","category":"GitLens","icon":{"dark":"images/dark/icon-prev-commit-menu.svg","light":"images/light/icon-prev-commit-menu.svg"}},{"command":"gitlens.diffWithWorking","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffWithWorkingInDiff","title":"Open Changes with Working File","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.diffLineWithWorking","title":"Open Line Changes with Working File","category":"GitLens"},{"command":"gitlens.toggleFileBlame","title":"Toggle File Blame Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.clearFileAnnotations","title":"Clear File Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git-orange.svg","light":"images/light/icon-git-orange.svg"}},{"command":"gitlens.computingFileAnnotations","title":"Computing File Annotations...","category":"GitLens","icon":{"dark":"images/dark/icon-git-progress.svg","light":"images/light/icon-git-progress.svg"}},{"command":"gitlens.toggleFileHeatmap","title":"Toggle File Heatmap Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleFileRecentChanges","title":"Toggle Recent File Changes Annotations","category":"GitLens","icon":{"dark":"images/dark/icon-git.svg","light":"images/light/icon-git.svg"}},{"command":"gitlens.toggleLineBlame","title":"Toggle Line Blame Annotations","category":"GitLens"},{"command":"gitlens.toggleCodeLens","title":"Toggle Git Code Lens","category":"GitLens"},{"command":"gitlens.switchMode","title":"Switch Mode","category":"GitLens"},{"command":"gitlens.toggleReviewMode","title":"Toggle Review Mode","category":"GitLens"},{"command":"gitlens.toggleZenMode","title":"Toggle Zen Mode","category":"GitLens"},{"command":"gitlens.showCommitSearch","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.showLastQuickPick","title":"Show Last Opened Quick Pick","category":"GitLens"},{"command":"gitlens.showCommitInView","title":"Show Commit in View","category":"GitLens"},{"command":"gitlens.showFileHistoryInView","title":"Show File History in View","category":"GitLens"},{"command":"gitlens.showQuickCommitDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickCommitFileDetails","title":"Show Commit Details","category":"GitLens"},{"command":"gitlens.showQuickRevisionDetails","title":"Show Revision Details","category":"GitLens","icon":{"dark":"images/dark/icon-commit.svg","light":"images/light/icon-commit.svg"}},{"command":"gitlens.showQuickFileHistory","title":"Show File History","category":"GitLens"},{"command":"gitlens.showQuickBranchHistory","title":"Show Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoHistory","title":"Show Current Branch History","category":"GitLens"},{"command":"gitlens.showQuickRepoStatus","title":"Show Repository Status","category":"GitLens"},{"command":"gitlens.showQuickStashList","title":"Show Stashed Changes","category":"GitLens"},{"command":"gitlens.copyMessageToClipboard","title":"Copy Commit Message to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.copyRemoteFileUrlToClipboard","title":"Copy Remote Url to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-remote.svg","light":"images/light/icon-copy-remote.svg"}},{"command":"gitlens.copyShaToClipboard","title":"Copy Commit ID to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-copy-commit.svg","light":"images/light/icon-copy-commit.svg"}},{"command":"gitlens.closeUnchangedFiles","title":"Close Unchanged Files","category":"GitLens"},{"command":"gitlens.openChangedFiles","title":"Open Changed Files","category":"GitLens"},{"command":"gitlens.openBranchesInRemote","title":"Open Branches on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openBranchInRemote","title":"Open Branch on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openCommitInRemote","title":"Open Commit on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileInRemote","title":"Open File on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openFileRevision","title":"Open Revision...","category":"GitLens"},{"command":"gitlens.openFileRevisionFrom","title":"Open Revision from...","category":"GitLens"},{"command":"gitlens.openRepoInRemote","title":"Open Repository on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.openWorkingFile","title":"Open Working File","category":"GitLens","icon":{"dark":"images/dark/icon-open-working-file.svg","light":"images/light/icon-open-working-file.svg"}},{"command":"gitlens.stashApply","title":"Apply Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-pop.svg","light":"images/light/icon-stash-pop.svg"}},{"command":"gitlens.stashDelete","title":"Delete Stashed Changes","category":"GitLens","icon":{"dark":"images/dark/icon-delete.svg","light":"images/light/icon-delete.svg"}},{"command":"gitlens.stashSave","title":"Stash All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.stashSaveFiles","title":"Stash Changes","category":"GitLens","icon":{"dark":"images/dark/icon-stash-save.svg","light":"images/light/icon-stash-save.svg"}},{"command":"gitlens.externalDiff","title":"Open Changes (with difftool)","category":"GitLens"},{"command":"gitlens.externalDiffAll","title":"Open All Changes (with difftool)","category":"GitLens"},{"command":"gitlens.resetSuppressedWarnings","title":"Reset Suppressed Warnings","category":"GitLens"},{"command":"gitlens.views.exploreRepoRevision","title":"Explore Repository from Here","category":"GitLens"},{"command":"gitlens.fetchRepositories","title":"Fetch Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.pullRepositories","title":"Pull Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.pushRepositories","title":"Push Repositories","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.checkout","title":"Checkout","category":"GitLens","icon":{"dark":"images/dark/icon-checkout.svg","light":"images/light/icon-checkout.svg"}},{"command":"gitlens.views.fetch","title":"Fetch","category":"GitLens","icon":{"dark":"images/dark/icon-sync.svg","light":"images/light/icon-sync.svg"}},{"command":"gitlens.views.pull","title":"Pull","category":"GitLens","icon":{"dark":"images/dark/icon-pull.svg","light":"images/light/icon-pull.svg"}},{"command":"gitlens.views.push","title":"Push","category":"GitLens","icon":{"dark":"images/dark/icon-push.svg","light":"images/light/icon-push.svg"}},{"command":"gitlens.views.pushWithForce","title":"Push (force)","category":"GitLens","icon":{"dark":"images/dark/icon-push-force.svg","light":"images/light/icon-push-force.svg"}},{"command":"gitlens.views.openInTerminal","title":"Open in Terminal","category":"GitLens"},{"command":"gitlens.views.setAsDefault","title":"Set as Default","category":"GitLens"},{"command":"gitlens.views.unsetAsDefault","title":"Unset as Default","category":"GitLens"},{"command":"gitlens.views.stageDirectory","title":"Stage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.stageFile","title":"Stage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-add.svg","light":"images/light/icon-add.svg"}},{"command":"gitlens.views.unstageDirectory","title":"Unstage All Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.unstageFile","title":"Unstage Changes","category":"GitLens","icon":{"dark":"images/dark/icon-minus.svg","light":"images/light/icon-minus.svg"}},{"command":"gitlens.views.star","title":"Add to Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star.svg","light":"images/light/icon-star.svg"}},{"command":"gitlens.views.unstar","title":"Remove from Favorites","category":"GitLens","icon":{"dark":"images/dark/icon-star-filled.svg","light":"images/light/icon-star-filled.svg"}},{"command":"gitlens.views.openDirectoryDiff","title":"Open Directory Compare","category":"GitLens"},{"command":"gitlens.views.openDirectoryDiffWithWorking","title":"Open Directory Compare with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChanges","title":"Open Changes","category":"GitLens"},{"command":"gitlens.views.openChangesWithWorking","title":"Open Changes with Working File","category":"GitLens"},{"command":"gitlens.views.openFile","title":"Open File","category":"GitLens","icon":{"dark":"images/dark/icon-open-file.svg","light":"images/light/icon-open-file.svg"}},{"command":"gitlens.views.openFileRevision","title":"Open Revision","category":"GitLens"},{"command":"gitlens.views.openFileRevisionInRemote","title":"Open Revision on Remote","category":"GitLens","icon":{"dark":"images/dark/icon-link.svg","light":"images/light/icon-link.svg"}},{"command":"gitlens.views.openChangedFiles","title":"Open Files","category":"GitLens"},{"command":"gitlens.views.openChangedFileChanges","title":"Open All Changes","category":"GitLens"},{"command":"gitlens.views.openChangedFileChangesWithWorking","title":"Open All Changes with Working Tree","category":"GitLens"},{"command":"gitlens.views.openChangedFileRevisions","title":"Open Revisions","category":"GitLens"},{"command":"gitlens.views.applyChanges","title":"Apply Changes","category":"GitLens"},{"command":"gitlens.views.closeRepository","title":"Close Repository","category":"GitLens"},{"command":"gitlens.views.compareAncestryWithWorking","title":"Compare Ancestry with Working Tree","category":"GitLens"},{"command":"gitlens.views.compareWithHead","title":"Compare with HEAD","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compareWithRemote","title":"Compare with Remote","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-remote.svg","light":"images/light/icon-compare-ref-remote.svg"}},{"command":"gitlens.views.compareWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareFileWithSelected","title":"Compare with Selected","category":"GitLens"},{"command":"gitlens.views.selectFileForCompare","title":"Select for Compare","category":"GitLens"},{"command":"gitlens.views.compareWithWorking","title":"Compare with Working Tree","category":"GitLens","icon":{"dark":"images/dark/icon-compare-ref-working.svg","light":"images/light/icon-compare-ref-working.svg"}},{"command":"gitlens.views.contributor.addCoauthoredBy","title":"Add as Co-author","category":"GitLens"},{"command":"gitlens.views.contributor.copyToClipboard","title":"Copy to Clipboard","category":"GitLens","icon":{"dark":"images/dark/icon-clipboard.svg","light":"images/light/icon-clipboard.svg"}},{"command":"gitlens.views.terminalCheckoutBranch","title":"Checkout Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateBranch","title":"Create Branch (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteBranch","title":"Delete Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalMergeBranch","title":"Merge Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranch","title":"Rebase (Interactive) Branch (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseBranchToRemote","title":"Rebase (Interactive) Branch to Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","title":"Squash Branch into Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCheckoutCommit","title":"Checkout Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCherryPickCommit","title":"Cherry Pick Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalPushCommit","title":"Push to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRebaseCommit","title":"Rebase to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalResetCommit","title":"Reset to Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRevertCommit","title":"Revert Commit (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalRemoveRemote","title":"Remove Remote (via Terminal)","category":"GitLens"},{"command":"gitlens.views.terminalCreateTag","title":"Create Tag (via Terminal)...","category":"GitLens"},{"command":"gitlens.views.terminalDeleteTag","title":"Delete Tag (via Terminal)","category":"GitLens"},{"command":"gitlens.views.repositories.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","title":"Enable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","title":"Disable Automatic Refresh","category":"GitLens"},{"command":"gitlens.views.fileHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.fileHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","title":"Resume File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","title":"Pause File Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.lineHistory.changeBase","title":"Change Base...","category":"GitLens","icon":{"dark":"images/dark/icon-history.svg","light":"images/light/icon-history.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","title":"Resume Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location.svg","light":"images/light/icon-location.svg"}},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","title":"Pause Line Tracking","category":"GitLens","icon":{"dark":"images/dark/icon-location-filled.svg","light":"images/light/icon-location-filled.svg"}},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","title":"Follow Renames","category":"GitLens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","title":"Don't Follow Renames","category":"GitLens"},{"command":"gitlens.views.compare.selectForCompare","title":"Compare References...","category":"GitLens","icon":{"dark":"images/dark/icon-compare-refs.svg","light":"images/light/icon-compare-refs.svg"}},{"command":"gitlens.views.compare.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.compare.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.compare.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.compare.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.compare.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.compare.pinComparison","title":"Pin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-tilted.svg","light":"images/light/icon-pin-tilted.svg"}},{"command":"gitlens.views.compare.unpinComparison","title":"Unpin Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-pin-filled.svg","light":"images/light/icon-pin-filled.svg"}},{"command":"gitlens.views.compare.swapComparison","title":"Swap Comparison","category":"GitLens","icon":{"dark":"images/dark/icon-swap.svg","light":"images/light/icon-swap.svg"}},{"command":"gitlens.views.search.searchCommits","title":"Search Commits","category":"GitLens","icon":{"dark":"images/dark/icon-search.svg","light":"images/light/icon-search.svg"}},{"command":"gitlens.views.search.clear","title":"Clear Results","category":"GitLens","icon":{"dark":"images/dark/icon-clear.svg","light":"images/light/icon-clear.svg"}},{"command":"gitlens.views.search.refresh","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}},{"command":"gitlens.views.search.setFilesLayoutToAuto","title":"Automatic Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToList","title":"List Layout","category":"GitLens"},{"command":"gitlens.views.search.setFilesLayoutToTree","title":"Tree Layout","category":"GitLens"},{"command":"gitlens.views.search.setKeepResultsToOn","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-lock.svg","light":"images/light/icon-lock.svg"}},{"command":"gitlens.views.search.setKeepResultsToOff","title":"Keep Results","category":"GitLens","icon":{"dark":"images/dark/icon-locked.svg","light":"images/light/icon-locked.svg"}},{"command":"gitlens.views.dismissNode","title":"Dismiss","category":"GitLens","icon":{"dark":"images/dark/icon-close-small.svg","light":"images/light/icon-close-small.svg"}},{"command":"gitlens.views.expandNode","title":"Expand","category":"GitLens"},{"command":"gitlens.views.refreshNode","title":"Refresh","category":"GitLens","icon":{"dark":"images/dark/icon-refresh.svg","light":"images/light/icon-refresh.svg"}}],"menus":{"commandPalette":[{"command":"gitlens.showCompareView","when":"gitlens:enabled"},{"command":"gitlens.showFileHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showLineHistoryView","when":"gitlens:enabled"},{"command":"gitlens.showRepositoriesView","when":"gitlens:enabled"},{"command":"gitlens.showSearchView","when":"gitlens:enabled"},{"command":"gitlens.diffDirectory","when":"gitlens:enabled"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled"},{"command":"gitlens.diffHeadWith","when":"gitlens:enabled"},{"command":"gitlens.diffWorkingWith","when":"gitlens:enabled"},{"command":"gitlens.diffWithRef","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.diffWithRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.externalDiff","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled"},{"command":"gitlens.toggleFileBlame","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed"},{"command":"gitlens.computingFileAnnotations","when":"false"},{"command":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleFileRecentChanges","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleLineBlame","when":"gitlens:enabled"},{"command":"gitlens.toggleCodeLens","when":"gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.switchMode","when":"gitlens:enabled"},{"command":"gitlens.toggleReviewMode","when":"gitlens:enabled"},{"command":"gitlens.toggleZenMode","when":"gitlens:enabled"},{"command":"gitlens.showCommitSearch","when":"gitlens:enabled"},{"command":"gitlens.showLastQuickPick","when":"gitlens:enabled"},{"command":"gitlens.showCommitInView","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickCommitDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickCommitFileDetails","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.showQuickBranchHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","when":"gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","when":"gitlens:enabled"},{"command":"gitlens.showQuickStashList","when":"gitlens:enabled"},{"command":"gitlens.copyMessageToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.copyShaToClipboard","when":"gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled"},{"command":"gitlens.openBranchesInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openBranchInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openCommitInRemote","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileInRemote","when":"gitlens:activeFileStatus =~ /tracked/ && gitlens:activeFileStatus =~ /remotes/"},{"command":"gitlens.openFileRevision","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openFileRevisionFrom","when":"gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.openRepoInRemote","when":"gitlens:hasRemotes"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.stashApply","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashDelete","when":"false"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly"},{"command":"gitlens.stashSaveFiles","when":"false"},{"command":"gitlens.resetSuppressedWarnings","when":"gitlens:enabled"},{"command":"gitlens.views.exploreRepoRevision","when":"false"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly"},{"command":"gitlens.views.checkout","when":"false"},{"command":"gitlens.views.fetch","when":"false"},{"command":"gitlens.views.pull","when":"false"},{"command":"gitlens.views.push","when":"false"},{"command":"gitlens.views.pushWithForce","when":"false"},{"command":"gitlens.views.openInTerminal","when":"false"},{"command":"gitlens.views.setAsDefault","when":"false"},{"command":"gitlens.views.unsetAsDefault","when":"false"},{"command":"gitlens.views.stageDirectory","when":"false"},{"command":"gitlens.views.stageFile","when":"false"},{"command":"gitlens.views.unstageDirectory","when":"false"},{"command":"gitlens.views.unstageFile","when":"false"},{"command":"gitlens.views.star","when":"false"},{"command":"gitlens.views.unstar","when":"false"},{"command":"gitlens.views.openChanges","when":"false"},{"command":"gitlens.views.openDirectoryDiff","when":"false"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"false"},{"command":"gitlens.views.openChangesWithWorking","when":"false"},{"command":"gitlens.views.openFile","when":"false"},{"command":"gitlens.views.openFileRevision","when":"false"},{"command":"gitlens.views.openFileRevisionInRemote","when":"false"},{"command":"gitlens.views.openChangedFiles","when":"false"},{"command":"gitlens.views.openChangedFileChanges","when":"false"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"false"},{"command":"gitlens.views.openChangedFileRevisions","when":"false"},{"command":"gitlens.views.applyChanges","when":"false"},{"command":"gitlens.views.closeRepository","when":"false"},{"command":"gitlens.views.compareAncestryWithWorking","when":"false"},{"command":"gitlens.views.compareWithHead","when":"false"},{"command":"gitlens.views.compareWithRemote","when":"false"},{"command":"gitlens.views.compareWithSelected","when":"false"},{"command":"gitlens.views.selectForCompare","when":"false"},{"command":"gitlens.views.compareFileWithSelected","when":"false"},{"command":"gitlens.views.selectFileForCompare","when":"false"},{"command":"gitlens.views.compareWithWorking","when":"false"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"false"},{"command":"gitlens.views.contributor.copyToClipboard","when":"false"},{"command":"gitlens.views.terminalCheckoutBranch","when":"false"},{"command":"gitlens.views.terminalCreateBranch","when":"false"},{"command":"gitlens.views.terminalDeleteBranch","when":"false"},{"command":"gitlens.views.terminalMergeBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranch","when":"false"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"false"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"false"},{"command":"gitlens.views.terminalCheckoutCommit","when":"false"},{"command":"gitlens.views.terminalCherryPickCommit","when":"false"},{"command":"gitlens.views.terminalPushCommit","when":"false"},{"command":"gitlens.views.terminalRebaseCommit","when":"false"},{"command":"gitlens.views.terminalResetCommit","when":"false"},{"command":"gitlens.views.terminalRevertCommit","when":"false"},{"command":"gitlens.views.terminalRemoveRemote","when":"false"},{"command":"gitlens.views.terminalCreateTag","when":"false"},{"command":"gitlens.views.terminalDeleteTag","when":"false"},{"command":"gitlens.views.repositories.refresh","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"false"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"false"},{"command":"gitlens.views.fileHistory.refresh","when":"false"},{"command":"gitlens.views.fileHistory.changeBase","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.refresh","when":"false"},{"command":"gitlens.views.lineHistory.changeBase","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"false"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"false"},{"command":"gitlens.views.compare.selectForCompare","when":"gitlens:enabled && config.gitlens.views.compare.enabled"},{"command":"gitlens.views.compare.clear","when":"false"},{"command":"gitlens.views.compare.refresh","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.compare.pinComparison","when":"false"},{"command":"gitlens.views.compare.unpinComparison","when":"false"},{"command":"gitlens.views.compare.swapComparison","when":"false"},{"command":"gitlens.views.search.searchCommits","when":"false"},{"command":"gitlens.views.search.clear","when":"false"},{"command":"gitlens.views.search.refresh","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"false"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"false"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"false"},{"command":"gitlens.views.dismissNode","when":"false"},{"command":"gitlens.views.expandNode","when":"false"},{"command":"gitlens.views.refreshNode","when":"false"}],"editor/context":[{"command":"gitlens.diffLineWithPrevious","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@1"},{"command":"gitlens.diffLineWithWorking","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.compare","group":"1_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@1"},{"command":"gitlens.openCommitInRemote","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.remote","group":"1_gitlens_1@2"},{"command":"gitlens.showQuickCommitFileDetails","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.details","group":"1_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editor.history","group":"3_gitlens@2"},{"command":"gitlens.toggleFileBlame","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.blame","group":"3_gitlens@3"},{"command":"gitlens.copyShaToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /blameable/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"editorTextFocus && gitlens:activeFileStatus =~ /remotes/ && config.gitlens.menus.editor.clipboard","group":"9_b_gitlens@3"}],"editor/title":[{"command":"gitlens.diffWithWorking","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.diffWithWorkingInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"!gitlens:activeFileStatus =~ /revision/ && resourceScheme != file && resourceScheme != git && isInDiffEditor","group":"navigation@0"},{"command":"gitlens.openWorkingFile","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme == git && !isInDiffEditor","group":"navigation@0"},{"command":"gitlens.diffWithPrevious","alt":"gitlens.diffWithRevision","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.diffWithPreviousInDiff","alt":"gitlens.diffWithRevision","when":"isInDiffEditor && gitlens:activeFileStatus =~ /tracked/ && config.gitlens.menus.editorGroup.compare","group":"navigation@97"},{"command":"gitlens.showQuickRevisionDetails","when":"gitlens:activeFileStatus =~ /revision/ && resourceScheme != git && config.gitlens.menus.editorGroup.compare","group":"navigation@98"},{"command":"gitlens.diffWithNext","when":"!isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.diffWithNextInDiff","when":"isInDiffEditor && gitlens:activeFileStatus =~ /revision/ && config.gitlens.menus.editorGroup.compare","group":"navigation@99"},{"command":"gitlens.toggleFileBlame","alt":"gitlens.toggleFileHeatmap","when":"gitlens:activeFileStatus =~ /blameable/ && !gitlens:annotationStatus && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.computingFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computing && config.gitlens.menus.editorGroup.blame","group":"navigation@100"},{"command":"gitlens.clearFileAnnotations","when":"gitlens:activeFileStatus =~ /blameable/ && gitlens:annotationStatus == computed && config.gitlens.menus.editorGroup.blame","group":"navigation@100"}],"editor/title/context":[{"command":"gitlens.openWorkingFile","when":"resourceScheme == gitlens","group":"1_co_gitlens@1"},{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.remote","group":"1_co_gitlens@2"},{"command":"gitlens.diffWithPrevious","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@1"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@2"},{"command":"gitlens.diffWithWorking","when":"resourceScheme == gitlens && config.gitlens.menus.editorTab.compare","group":"1_co_gitlens_1@3"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.editorTab.history","group":"1_co_gitlens_2@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.editorTab.clipboard","group":"1_cutcopypaste@100"}],"explorer/context":[{"command":"gitlens.openFileInRemote","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.remote","group":"navigation@100"},{"command":"gitlens.diffWithPrevious","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@1"},{"command":"gitlens.diffWithRevision","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.compare","group":"3_compare@2"},{"command":"gitlens.showQuickFileHistory","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && config.gitlens.menus.explorer.history","group":"4_gitlens_1@2"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"!explorerResourceIsRoot && !explorerResourceIsFolder && gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.explorer.clipboard","group":"5_cutcopypaste@100"}],"scm/resourceGroup/context":[{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stashInline","group":"inline@-1"},{"command":"gitlens.stashSave","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmGroup.stash","group":"1_modification@100"},{"command":"gitlens.openChangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@1"},{"command":"gitlens.closeUnchangedFiles","when":"gitlens:enabled && config.gitlens.menus.scmGroup.openClose","group":"2_gitlens@2"},{"command":"gitlens.externalDiffAll","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@3"},{"command":"gitlens.diffDirectoryWithHead","when":"gitlens:enabled && config.gitlens.menus.scmGroup.compare","group":"3_gitlens@4"}],"scm/resourceState/context":[{"command":"gitlens.openFileInRemote","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.remote","group":"navigation"},{"command":"gitlens.externalDiff","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"navigation"},{"command":"gitlens.diffWithRevision","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@1"},{"command":"gitlens.diffWithRef","when":"gitlens:enabled && config.gitlens.menus.scmItem.compare","group":"1_gitlens@2"},{"command":"gitlens.showQuickFileHistory","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@1"},{"command":"gitlens.showFileHistoryInView","when":"gitlens:enabled && config.gitlens.menus.scmItem.history","group":"1_gitlens_1@2"},{"command":"gitlens.stashSaveFiles","when":"gitlens:enabled && !gitlens:readonly && config.gitlens.menus.scmItem.stash","group":"1_modification@-1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"gitlens:enabled && gitlens:hasRemotes && config.gitlens.menus.scmItem.clipboard","group":"9_gitlens@1"}],"view/title":[{"command":"gitlens.pushRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@10"},{"command":"gitlens.pullRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@11"},{"command":"gitlens.fetchRepositories","when":"gitlens:hasRemotes && !gitlens:readonly && view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@12"},{"command":"gitlens.views.repositories.refresh","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"navigation@99"},{"command":"gitlens.views.repositories.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.repositories:/","group":"1_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOn","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && !gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.repositories.setAutoRefreshToOff","when":"view =~ /^gitlens\\.views\\.repositories:/ && config.gitlens.views.repositories.autoRefresh && gitlens:views:repositories:autoRefresh","group":"2_gitlens"},{"command":"gitlens.views.fileHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && gitlens:views:fileHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.fileHistory.changeBase","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@11"},{"command":"gitlens.views.fileHistory.refresh","when":"view =~ /^gitlens\\.views\\.fileHistory:/","group":"navigation@99"},{"command":"gitlens.views.fileHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.fileHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.fileHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setEditorFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.setEditorFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && gitlens:views:lineHistory:editorFollowing","group":"navigation@10"},{"command":"gitlens.views.lineHistory.changeBase","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@11"},{"command":"gitlens.views.lineHistory.refresh","when":"view =~ /^gitlens\\.views\\.lineHistory:/","group":"navigation@99"},{"command":"gitlens.views.lineHistory.setRenameFollowingOn","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && !config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.lineHistory.setRenameFollowingOff","when":"view =~ /^gitlens\\.views\\.lineHistory:/ && config.gitlens.advanced.fileHistoryFollowsRenames","group":"1_gitlens"},{"command":"gitlens.views.compare.selectForCompare","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@10"},{"command":"gitlens.views.compare.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.compare:/ && !gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.compare:/ && gitlens:views:compare:keepResults","group":"navigation@11"},{"command":"gitlens.views.compare.clear","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@98"},{"command":"gitlens.views.compare.refresh","when":"view =~ /^gitlens\\.views\\.compare:/","group":"navigation@99"},{"command":"gitlens.views.compare.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.compare.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.compare:/","group":"1_gitlens"},{"command":"gitlens.views.search.searchCommits","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@10"},{"command":"gitlens.views.search.setKeepResultsToOn","when":"view =~ /^gitlens\\.views\\.search:/ && !gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.setKeepResultsToOff","when":"view =~ /^gitlens\\.views\\.search:/ && gitlens:views:search:keepResults","group":"navigation@11"},{"command":"gitlens.views.search.clear","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@98"},{"command":"gitlens.views.search.refresh","when":"view =~ /^gitlens\\.views\\.search:/","group":"navigation@99"},{"command":"gitlens.views.search.setFilesLayoutToAuto","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToList","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.views.search.setFilesLayoutToTree","when":"view =~ /^gitlens\\.views\\.search:/","group":"1_gitlens"},{"command":"gitlens.supportGitLens","when":"view =~ /^gitlens\\.views\\..*:/ && config.gitlens.advanced.messages.suppressSupportGitLensNotification != true && gitlens:views:supportGitLens:hide != true","group":"navigation@1"},{"command":"gitlens.showSettingsPage","when":"view =~ /^gitlens\\.views\\..*:/","group":"9_gitlens"}],"view/item/context":[{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"inline@98"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:branches\\b.*?\\+remotes\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"inline@10"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"inline@96"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"inline@97","alt":"gitlens.views.compareWithWorking"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?/","group":"inline@97"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"inline@98"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"1_gitlens@1"},{"command":"gitlens.openBranchInRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+(tracking|remote)\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compareWithRemote","when":"viewItem =~ /gitlens:branch\\b.*?\\+tracking\\b.*?/","group":"7_gitlens@1"},{"command":"gitlens.views.compareWithHead","when":"viewItem =~ /gitlens:(branch\\b(?!.*?\\+current\\b.*?)|commit\\b|stash\\b|tag\\b)/","group":"7_gitlens@2"},{"command":"gitlens.views.compareWithWorking","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens@3"},{"command":"gitlens.views.compareAncestryWithWorking","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"7_gitlens@4"},{"command":"gitlens.views.compareWithSelected","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/ && gitlens:views:canCompare","group":"7_gitlens_@1"},{"command":"gitlens.views.selectForCompare","when":"viewItem =~ /gitlens:(branch|commit|stash|tag)\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.compareFileWithSelected","when":"viewItem =~ /gitlens:file:\\b/ && gitlens:views:canCompare:file","group":"7_gitlens_@1"},{"command":"gitlens.views.selectFileForCompare","when":"viewItem =~ /gitlens:file:\\b/","group":"7_gitlens_@2"},{"command":"gitlens.views.openDirectoryDiffWithWorking","when":"viewItem =~ /gitlens:(branch|tag)\\b/","group":"7_gitlens_more@2"},{"command":"gitlens.views.terminalCheckoutBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)//","group":"8_gitlens@1"},{"command":"gitlens.views.terminalRebaseBranchToRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b.*?\\+current\\b.*?\\+tracking\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.terminalMergeBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRebaseBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalSquashBranchIntoCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalCreateBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit|tag)\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalDeleteBranch","when":"!gitlens:readonly && viewItem =~ /gitlens:branch\\b(?!.*?\\+current\\b.*?)/","group":"8_gitlens@6"},{"command":"gitlens.views.terminalCreateTag","when":"!gitlens:readonly && viewItem =~ /gitlens:(branch|commit)\\b/","group":"8_gitlens@7"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:branch\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:branch\\b.*?\\+starred\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"inline@98"},{"command":"gitlens.views.contributor.copyToClipboard","when":"viewItem =~ /gitlens:contributor\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.contributor.addCoauthoredBy","when":"viewItem =~ /gitlens:contributor\\b/","group":"2_gitlens@1"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"inline@98"},{"command":"gitlens.openCommitInRemote","when":"viewItem =~ /gitlens:commit\\b/ && gitlens:hasRemotes","group":"1_gitlens@1"},{"command":"gitlens.views.openChangedFileChanges","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@1"},{"command":"gitlens.views.openChangedFileChangesWithWorking","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangedFiles","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openChangedFileRevisions","when":"viewItem =~ /gitlens:(commit|stash)\\b/","group":"3_gitlens@2"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"inline@98","alt":"gitlens.copyMessageToClipboard"},{"command":"gitlens.copyShaToClipboard","when":"viewItem =~ /gitlens:(file:)?commit\\b/","group":"5_gitlens@1"},{"command":"gitlens.copyMessageToClipboard","when":"viewItem =~ /gitlens:(commit|stash|file:commit)\\b/","group":"5_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:commit\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.terminalCherryPickCommit","when":"!gitlens:readonly && viewItem == gitlens:commit","group":"8_gitlens@1"},{"command":"gitlens.views.terminalPushCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@2"},{"command":"gitlens.views.terminalRevertCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b.*?\\+current\\b.*?/","group":"8_gitlens@3"},{"command":"gitlens.views.terminalCheckoutCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@4"},{"command":"gitlens.views.terminalRebaseCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@5"},{"command":"gitlens.views.terminalResetCommit","when":"!gitlens:readonly && viewItem =~ /gitlens:commit\\b/","group":"8_gitlens@6"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"inline@1"},{"command":"gitlens.views.stageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+unstaged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageFile","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+staged\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.stashSaveFiles","when":"!gitlens:readonly && viewItem =~ /gitlens:file\\b.*?\\+(un)?staged\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.openChanges","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@1"},{"command":"gitlens.externalDiff","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.openChangesWithWorking","when":"viewItem =~ /gitlens:file\\b/","group":"2_gitlens@3"},{"command":"gitlens.views.openFile","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/","group":"3_gitlens@1"},{"command":"gitlens.views.openFileRevision","when":"viewItem =~ /gitlens:file\\b/","group":"3_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(file\\b(?!.*?\\+(un)?staged\\b.*?)|history:(file|line))\\b/ && gitlens:hasRemotes","group":"inline@99","alt":"gitlens.copyRemoteFileUrlToClipboard"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:file\\b/ && gitlens:hasRemotes","group":"4_gitlens@1"},{"command":"gitlens.copyRemoteFileUrlToClipboard","when":"viewItem =~ /gitlens:(file|history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"5_gitlens@3"},{"command":"gitlens.views.openFileRevisionInRemote","when":"viewItem == gitlens:file:commit && gitlens:hasRemotes","group":"4_gitlens@2"},{"command":"gitlens.openFileInRemote","when":"viewItem =~ /gitlens:(history:(file|line)|status:file)\\b/ && gitlens:hasRemotes","group":"3_gitlens@2"},{"command":"gitlens.views.applyChanges","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@1"},{"command":"gitlens.views.checkout","when":"viewItem =~ /gitlens:file:(commit|results)\\b/","group":"5_gitlens_1@2"},{"command":"gitlens.views.applyChanges","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@1"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem == gitlens:file:stash","group":"1_gitlens@2"},{"command":"gitlens.showQuickCommitDetails","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@1"},{"command":"gitlens.showCommitInView","when":"viewItem =~ /gitlens:file\\b(?!(:stash|:status))/","group":"5_gitlens_2@2"},{"command":"gitlens.showQuickFileHistory","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@1"},{"command":"gitlens.showFileHistoryInView","when":"viewItem =~ /gitlens:file\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"inline@97"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"1_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@1"},{"command":"gitlens.openBranchesInRemote","when":"viewItem =~ /gitlens:remote\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.terminalRemoveRemote","when":"!gitlens:readonly && viewItem =~ /gitlens:remote\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.setAsDefault","when":"viewItem =~ /gitlens:remote\\b(?!.*?\\+default\\b.*?)/","group":"8_gitlens_@1"},{"command":"gitlens.views.unsetAsDefault","when":"viewItem =~ /gitlens:remote\\b.*?\\+default\\b.*?/","group":"8_gitlens_@1"},{"command":"gitlens.views.exploreRepoRevision","when":"viewItem =~ /gitlens:(branch|commit|file:(commit|results)|stash|tag)\\b/","group":"7_gitlens_more@1"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"inline@10"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"inline@2"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@97","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@98"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"inline@99"},{"command":"gitlens.views.fetch","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"1_gitlens@2"},{"command":"gitlens.views.openInTerminal","when":"viewItem =~ /gitlens:repository\\b/","group":"2_gitlens@1"},{"command":"gitlens.openRepoInRemote","when":"viewItem =~ /gitlens:repository\\b/ && gitlens:hasRemotes","group":"2_gitlens@2"},{"command":"gitlens.showCommitSearch","when":"viewItem =~ /gitlens:repository\\b/","group":"3_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /gitlens:repository\\b/","group":"4_gitlens@2"},{"command":"gitlens.views.star","when":"viewItem =~ /gitlens:repository\\b(?!.*?\\+starred\\b.*?)/","group":"8_gitlens@1"},{"command":"gitlens.views.unstar","when":"viewItem =~ /gitlens:repository\\b.*?\\+starred\\b.*?/","group":"8_gitlens@1"},{"command":"gitlens.views.closeRepository","when":"viewItem =~ /gitlens:repository\\b/","group":"8_gitlens@2"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"inline@1"},{"command":"gitlens.views.pull","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:behind","group":"1_gitlens@1"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"inline@1","alt":"gitlens.views.pushWithForce"},{"command":"gitlens.views.push","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@1"},{"command":"gitlens.views.pushWithForce","when":"gitlens:hasRemotes && !gitlens:readonly && viewItem == gitlens:status:upstream:ahead","group":"1_gitlens@2"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"inline@99"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"inline@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"inline@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:compare:results\\b/","group":"inline@3"},{"command":"gitlens.views.openDirectoryDiff","when":"viewItem =~ /gitlens:compare:results\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.compare.pinComparison","when":"viewItem =~ /gitlens:compare:results\\b(?!.*?\\+pinned\\b.*?)/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.unpinComparison","when":"viewItem =~ /gitlens:compare:results\\b.*?\\+pinned\\b.*?/","group":"2_gitlens@1"},{"command":"gitlens.views.compare.swapComparison","when":"viewItem =~ /gitlens:compare:results\\b/","group":"2_gitlens@2"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"inline@1"},{"command":"gitlens.views.search.searchCommits","when":"viewItem == gitlens:search:results","group":"2_gitlens@1"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"inline@98"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"inline@99"},{"command":"gitlens.stashSave","when":"!gitlens:readonly && viewItem =~ /^gitlens:(stashes|status:files)$/","group":"1_gitlens@1"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stashes","group":"1_gitlens@2"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@98"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"inline@99"},{"command":"gitlens.stashApply","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@1"},{"command":"gitlens.stashDelete","when":"!gitlens:readonly && viewItem == gitlens:stash","group":"1_gitlens@2"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"inline@10"},{"command":"gitlens.views.checkout","when":"!gitlens:readonly && viewItem =~ /gitlens:tag\\b/","group":"1_gitlens@1"},{"command":"gitlens.views.terminalDeleteTag","when":"!gitlens:readonly && viewItem == gitlens:tag","group":"8_gitlens"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"inline@2"},{"command":"gitlens.views.stageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@1"},{"command":"gitlens.views.unstageDirectory","when":"viewItem =~ /gitlens:folder\\b.*?\\+working\\b.*?/","group":"1_gitlens@2"},{"command":"gitlens.views.expandNode","when":"viewItem =~ /gitlens:(compare|folder|results|search|status:files)\\b/","group":"8_gitlens@1"},{"command":"gitlens.views.dismissNode","when":"viewItem =~ /gitlens:(compare:picker:ref|compare:results\\b(?!.*?\\+pinned\\b.*?)|search)\\b(?!:(commits|files))/","group":"8_gitlens@2"},{"command":"gitlens.views.refreshNode","when":"viewItem =~ /gitlens:(?!file\\b)/","group":"9_gitlens@1"}]},"keybindings":[{"command":"gitlens.key.left","key":"alt+left","when":"gitlens:key:left"},{"command":"gitlens.key.right","key":"alt+right","when":"gitlens:key:right"},{"command":"gitlens.key.,","key":"alt+,","when":"gitlens:key:,"},{"command":"gitlens.key..","key":"alt+.","when":"gitlens:key:."},{"command":"gitlens.key.escape","key":"escape","when":"gitlens:key:escape && editorTextFocus && !findWidgetVisible && !renameInputVisible && !suggestWidgetVisible && !isInEmbeddedEditor"},{"command":"gitlens.toggleFileBlame","key":"alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"shift+alt+b","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"alt+-","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"alt+/","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"shift+alt+h","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"alt+s","when":"config.gitlens.keymap == alternate && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"alt+c","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"alt+,","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"shift+alt+,","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"shift+alt+.","when":"config.gitlens.keymap == alternate && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"alt+w","when":"config.gitlens.keymap == alternate && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.toggleFileBlame","key":"ctrl+shift+g b","mac":"cmd+alt+g b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /blameable/"},{"command":"gitlens.toggleCodeLens","key":"ctrl+shift+g shift+b","mac":"cmd+alt+g shift+b","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled && gitlens:canToggleCodeLens"},{"command":"gitlens.showLastQuickPick","key":"ctrl+shift+g -","mac":"cmd+alt+g -","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showCommitSearch","key":"ctrl+shift+g /","mac":"cmd+alt+g /","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickFileHistory","key":"ctrl+shift+g h","mac":"cmd+alt+g h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoHistory","key":"ctrl+shift+g shift+h","mac":"cmd+alt+g shift+h","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickRepoStatus","key":"ctrl+shift+g s","mac":"cmd+alt+g s","when":"config.gitlens.keymap == chorded && gitlens:enabled"},{"command":"gitlens.showQuickCommitFileDetails","key":"ctrl+shift+g c","mac":"cmd+alt+g c","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:enabled"},{"command":"gitlens.diffWithNext","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithNextInDiff","key":"ctrl+shift+g .","mac":"cmd+alt+g .","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithPrevious","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithPreviousInDiff","key":"ctrl+shift+g ,","mac":"cmd+alt+g ,","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffLineWithPrevious","key":"ctrl+shift+g shift+,","mac":"cmd+alt+g shift+,","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"gitlens.diffWithWorking","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && editorTextFocus && !isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffWithWorkingInDiff","key":"ctrl+shift+g shift+.","mac":"cmd+alt+g shift+.","when":"config.gitlens.keymap == chorded && isInDiffEditor && gitlens:activeFileStatus =~ /revision/"},{"command":"gitlens.diffLineWithWorking","key":"ctrl+shift+g w","mac":"cmd+alt+g w","when":"config.gitlens.keymap == chorded && editorTextFocus && gitlens:activeFileStatus =~ /tracked/"},{"command":"workbench.view.scm","key":"ctrl+shift+g g","mac":"ctrl+shift+g","when":"config.gitlens.keymap == chorded && gitlens:enabled"}],"resourceLabelFormatters":[{"scheme":"gitlens","authority":"*","formatting":{"label":"${path} (${authority})","separator":"/"}}],"viewsContainers":{"activitybar":[{"id":"gitlens","title":"GitLens","icon":"images/gitlens-activitybar.svg"}]},"views":{"gitlens":[{"id":"gitlens.views.repositories:gitlens","name":"Repositories","when":"config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == gitlens"},{"id":"gitlens.views.fileHistory:gitlens","name":"File History","when":"config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == gitlens"},{"id":"gitlens.views.lineHistory:gitlens","name":"Line History","when":"config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == gitlens"},{"id":"gitlens.views.compare:gitlens","name":"Compare","when":"config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == gitlens"},{"id":"gitlens.views.search:gitlens","name":"Search Commits","when":"config.gitlens.views.search.enabled && config.gitlens.views.search.location == gitlens"}],"explorer":[{"id":"gitlens.views.repositories:explorer","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == explorer"},{"id":"gitlens.views.fileHistory:explorer","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == explorer"},{"id":"gitlens.views.lineHistory:explorer","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == explorer"},{"id":"gitlens.views.compare:explorer","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == explorer"},{"id":"gitlens.views.search:explorer","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == explorer"}],"scm":[{"id":"gitlens.views.repositories:scm","name":"GitLens: Repositories","when":"gitlens:enabled && config.gitlens.views.repositories.enabled && config.gitlens.views.repositories.location == scm"},{"id":"gitlens.views.fileHistory:scm","name":"GitLens: File History","when":"gitlens:enabled && config.gitlens.views.fileHistory.enabled && config.gitlens.views.fileHistory.location == scm"},{"id":"gitlens.views.lineHistory:scm","name":"GitLens: Line History","when":"gitlens:enabled && config.gitlens.views.lineHistory.enabled && config.gitlens.views.lineHistory.location == scm"},{"id":"gitlens.views.compare:scm","name":"GitLens: Compare","when":"gitlens:enabled && config.gitlens.views.compare.enabled && config.gitlens.views.compare.location == scm"},{"id":"gitlens.views.search:scm","name":"GitLens: Search Commits","when":"gitlens:enabled && config.gitlens.views.search.enabled && config.gitlens.views.search.location == scm"}]}},"scripts":{"analyze:bundle":"webpack --env.analyzeBundle","analyze:deps":"webpack --env.analyzeDeps","build":"webpack --env.development","bundle":"webpack --env.production","clean":"git clean -Xdf -e !.cache-images -e !node_modules -e !node_modules/**/*","lint":"eslint src/**/*.ts --fix","pack":"vsce package","pretty":"prettier --config .prettierrc --loglevel warn --write \"./**/*.{ts,md,json}\" && npm run lint","pub":"vsce publish","rebuild":"npm run reset && npm run build","reset":"npm run clean && npm install --no-save","watch":"webpack --watch --env.development --info-verbosity verbose","webviews:optimize":"webpack --config-name webviews --env.optimizeImages","webviews:watch":"webpack --watch --config-name webviews --env.development --info-verbosity verbose","update:emoji":"pushd emoji && node ./shortcodeToEmoji.js && popd","postinstall":"node ./node_modules/vscode/bin/install","vscode:prepublish":"npm run reset && npm run bundle"},"dependencies":{"dayjs":"1.8.12","iconv-lite":"0.4.24","lodash-es":"4.17.11","vsls":"0.3.1291"},"devDependencies":{"@types/lodash-es":"4.17.3","@types/node":"10.1.4","@typescript-eslint/eslint-plugin":"1.7.0","@typescript-eslint/parser":"1.7.0","clean-webpack-plugin":"2.0.1","circular-dependency-plugin":"5.0.2","css-loader":"2.1.1","eslint":"5.16.0","eslint-cli":"1.1.1","eslint-config-prettier":"4.1.0","eslint-loader":"2.1.2","eslint-plugin-import":"2.17.2","eslint-plugin-prettiest":"0.0.1","html-webpack-exclude-assets-plugin":"0.0.7","html-webpack-inline-source-plugin":"0.0.10","html-webpack-plugin":"3.2.0","imagemin-webpack-plugin":"2.4.2","mini-css-extract-plugin":"0.6.0","node-sass":"4.11.0","prettier":"1.17.0","prettier-eslint":"8.8.2","sass-loader":"7.1.0","terser-webpack-plugin":"1.2.3","ts-loader":"5.3.3","typescript":"3.4.4","vsce":"1.59.0","vscode":"1.1.33","webpack":"4.30.0","webpack-cli":"3.3.1","webpack-bundle-analyzer":"3.3.2"},"uuid":"4de763bd-505d-4978-9575-2b7696ecf94e","isBuiltin":false,"isUnderDevelopment":false,"id":"eamodio.gitlens","identifier":{"value":"eamodio.gitlens","_lower":"eamodio.gitlens"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/eamodio.gitlens-9.6.3","path":"/home/doc/.vscode-oss/extensions/eamodio.gitlens-9.6.3","scheme":"file"}},{"name":"prettier-vscode","displayName":"Prettier - Code formatter","description":"VS Code plugin for prettier/prettier","version":"1.9.0","publisher":"esbenp","author":"Esben Petersen <@esbenp>","galleryBanner":{"color":"#ffe04b","theme":"light"},"homepage":"https://marketplace.visualstudio.com/items?itemName=esbenp.prettier-vscode","repository":{"type":"git","url":"https://github.com/prettier/prettier-vscode.git"},"license":"MIT","bugs":{"url":"https://github.com/prettier/prettier-vscode/issues"},"engines":{"vscode":"^1.17.0"},"keywords":["multi-root ready"],"categories":["Formatters"],"activationEvents":["*"],"icon":"icon.png","main":"/home/doc/.vscode-oss/extensions/esbenp.prettier-vscode-1.9.0/out/src/extension","contributes":{"configuration":{"type":"object","title":"Prettier - Code formatter configuration","properties":{"prettier.disableLanguages":{"type":"array","items":{"type":"string"},"default":["vue"],"description":"A list of languages IDs to disable this extension on","scope":"window"},"prettier.eslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-eslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from eslint rules.","scope":"resource"},"prettier.tslintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-tslint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from tslint rules.","scope":"resource"},"prettier.stylelintIntegration":{"type":"boolean","default":false,"description":"Use 'prettier-stylelint' instead of 'prettier'. Other settings will only be fallbacks in case they could not be inferred from stylelint rules.","scope":"resource"},"prettier.requireConfig":{"type":"boolean","default":false,"description":"Require a 'prettierconfig' to format","scope":"resource"},"prettier.ignorePath":{"type":"string","default":".prettierignore","description":"Path to a .prettierignore or similar file","scope":"resource"},"prettier.printWidth":{"type":"integer","default":80,"description":"Fit code within this line limit","scope":"resource"},"prettier.tabWidth":{"type":"integer","default":2,"description":"Number of spaces it should use per tab","scope":"resource"},"prettier.singleQuote":{"type":"boolean","default":false,"description":"If true, will use single instead of double quotes","scope":"resource"},"prettier.trailingComma":{"type":"string","enum":["none","es5","all"],"default":"none","description":"Controls the printing of trailing commas wherever possible.\n Valid options:\n    'none' - No trailing commas\n    'es5' - Trailing commas where valid in ES5 (objects, arrays, etc)\n    'all' - Trailing commas wherever possible (function arguments)","scope":"resource"},"prettier.bracketSpacing":{"type":"boolean","default":true,"description":"Controls the printing of spaces inside object literals","scope":"resource"},"prettier.jsxBracketSameLine":{"type":"boolean","default":false,"description":"If true, puts the `>` of a multi-line jsx element at the end of the last line instead of being alone on the next line","scope":"resource"},"prettier.parser":{"type":"string","enum":["babylon","flow"],"default":"babylon","description":"Override the parser. You shouldn't have to change this setting.","scope":"resource"},"prettier.semi":{"type":"boolean","default":true,"description":"Whether to add a semicolon at the end of every line","scope":"resource"},"prettier.useTabs":{"type":"boolean","default":false,"description":"Indent lines with tabs","scope":"resource"},"prettier.proseWrap":{"type":"string","enum":["preserve","always","never"],"default":"preserve","description":"(Markdown) wrap prose over multiple lines"},"prettier.arrowParens":{"type":"string","enum":["avoid","always"],"default":"avoid","description":"Include parentheses around a sole arrow function parameter","scope":"resource"},"prettier.jsxSingleQuote":{"type":"boolean","default":false,"description":"Use single quotes instead of double quotes in JSX"},"prettier.htmlWhitespaceSensitivity":{"type":"string","enum":["css","strict","ignore"],"default":"css","description":"Specify the global whitespace sensitivity for HTML files.\n Valid options: \n'css' - Respect the default value of CSS display property. \n'strict' - Whitespaces are considered sensitive. \n'ignore' - Whitespaces are considered insensitive."},"prettier.endOfLine":{"type":"string","enum":["auto","lf","crlf","cr"],"default":"auto","description":"Specify the end of line used by prettier"},"prettier.quoteProps":{"type":"string","enum":["as-needed","consistent","preserve"],"default":"as-needed","description":"Change when properties in objects are quoted"}}},"jsonValidation":[{"fileMatch":".prettierrc","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":".prettierrc.json","url":"http://json.schemastore.org/prettierrc"},{"fileMatch":"package.json","url":"./package-json-schema.json"}],"languages":[{"id":"json","filenames":[".prettierrc"]},{"id":"ignore","filenames":[".prettierignore"]}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc --watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"cd testEslint && npm i && cd ../testTslint && npm i && cd .. && cross-env CODE_TESTS_WORKSPACE=testWorkspace.code-workspace node ./node_modules/vscode/bin/test","version":"node ./scripts/version.js && git add CHANGELOG.md"},"devDependencies":{"@types/mocha":"^5.2.1","@types/node":"^8.10.39","@types/resolve":"0.0.8","cross-env":"^5.1.6","mocha":"^5.2.0","vscode":"^1.1.28"},"dependencies":{"ignore":"^3.3.8","prettier":"1.17.0","prettier-eslint":"^8.8.2","prettier-stylelint":"^0.4.2","prettier-tslint":"^0.4.2","read-pkg-up":"^4.0.0","resolve":"^1.10.0","typescript":"^2.9.2"},"uuid":"96fa4707-6983-4489-b7c5-d5ffdfdcce90","isBuiltin":false,"isUnderDevelopment":false,"id":"esbenp.prettier-vscode","identifier":{"value":"esbenp.prettier-vscode","_lower":"esbenp.prettier-vscode"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/esbenp.prettier-vscode-1.9.0","path":"/home/doc/.vscode-oss/extensions/esbenp.prettier-vscode-1.9.0","scheme":"file"}},{"name":"vimL","displayName":"vimL","description":"VimL language syntax for vscode from textmate","version":"0.0.3","publisher":"fallenwood","engines":{"vscode":"^1.5.0"},"repository":{"type":"git","url":"https://github.com/fallenwood/vscode-viml.git"},"categories":["Languages"],"contributes":{"languages":[{"id":"viml","aliases":["VimL","vimL","viml"],"extensions":[".vim",".nvim",".vimrc"],"configuration":"./language-configuration.json"}],"grammars":[{"language":"viml","scopeName":"source.viml","path":"./syntaxes/viml.tmLanguage"}]},"uuid":"a353cb99-4a98-43ee-b644-e537b89fc3ae","isBuiltin":false,"isUnderDevelopment":false,"id":"fallenwood.vimL","identifier":{"value":"fallenwood.vimL","_lower":"fallenwood.viml"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/fallenwood.viml-0.0.3","path":"/home/doc/.vscode-oss/extensions/fallenwood.viml-0.0.3","scheme":"file"}},{"name":"auto-close-tag","displayName":"Auto Close Tag","description":"Automatically add HTML/XML close tag, same as Visual Studio IDE or Sublime Text","version":"0.5.6","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.16.0"},"categories":["Other","Languages"],"keywords":["AutoComplete","close","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-close-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-close-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-close-tag.git"},"activationEvents":["*","onCommand:auto-close-tag.closeTag"],"main":"/home/doc/.vscode-oss/extensions/formulahendry.auto-close-tag-0.5.6/out/src/extension","contributes":{"commands":[{"command":"auto-close-tag.closeTag","title":"Close Tag"}],"keybindings":[{"command":"auto-close-tag.closeTag","key":"alt+.","mac":"cmd+alt+."}],"configuration":{"type":"object","title":"Auto Close Tag configuration","properties":{"auto-close-tag.activationOnLanguage":{"type":"array","default":["xml","php","blade","ejs","jinja","javascript","javascriptreact","typescript","typescriptreact","plaintext","markdown","vue","liquid","erb","lang-cfml","cfml","HTML (Eex)"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"]. Use [\"*\"] to activate for all languages.","scope":"resource"},"auto-close-tag.excludedTags":{"type":"array","default":["area","base","br","col","command","embed","hr","img","input","keygen","link","meta","param","source","track","wbr"],"description":"Set the tag list that would not be auto closed.","scope":"resource"},"auto-close-tag.SublimeText3Mode":{"type":"boolean","default":false,"description":"Auto close tag when </ is typed, same as Sublime Text 3","scope":"resource"},"auto-close-tag.enableAutoCloseTag":{"type":"boolean","default":true,"description":"Whether to insert close tag automatically","scope":"resource"},"auto-close-tag.enableAutoCloseSelfClosingTag":{"type":"boolean","default":true,"description":"Whether to close self-closing tag automatically","scope":"resource"},"auto-close-tag.fullMode":{"type":"boolean","default":false,"description":"Enable both Visual Studio and Sublime Text mode","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"d3836729-9cc1-42c1-b2af-d50071f57d29","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.auto-close-tag","identifier":{"value":"formulahendry.auto-close-tag","_lower":"formulahendry.auto-close-tag"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/formulahendry.auto-close-tag-0.5.6","path":"/home/doc/.vscode-oss/extensions/formulahendry.auto-close-tag-0.5.6","scheme":"file"}},{"name":"auto-rename-tag","displayName":"Auto Rename Tag","description":"Auto rename paired HTML/XML tag","version":"0.0.15","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.17.0"},"categories":["Other","Languages"],"keywords":["AutoComplete","rename","tag","html","xml","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-auto-rename-tag/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-auto-rename-tag/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-auto-rename-tag.git"},"activationEvents":["*"],"main":"/home/doc/.vscode-oss/extensions/formulahendry.auto-rename-tag-0.0.15/out/src/extension","contributes":{"configuration":{"type":"object","title":"Auto Rename Tag configuration","properties":{"auto-rename-tag.activationOnLanguage":{"type":"array","default":["*"],"description":"Set the languages that the extension will be activated.  e.g. [\"html\",\"xml\",\"php\"] By default, it is [\"*\"] and will be activated for all languages.","scope":"resource"}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^2.0.3","vscode":"^1.0.0","mocha":"^2.3.3","@types/node":"^6.0.40","@types/mocha":"^2.2.32"},"uuid":"6e440e71-8ed9-4f25-bb78-4b13096b8a03","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.auto-rename-tag","identifier":{"value":"formulahendry.auto-rename-tag","_lower":"formulahendry.auto-rename-tag"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/formulahendry.auto-rename-tag-0.0.15","path":"/home/doc/.vscode-oss/extensions/formulahendry.auto-rename-tag-0.0.15","scheme":"file"}},{"name":"code-runner","displayName":"Code Runner","description":"Run C, C++, Java, JS, PHP, Python, Perl, Ruby, Go, Lua, Groovy, PowerShell, CMD, BASH, F#, C#, VBScript, TypeScript, CoffeeScript, Scala, Swift, Julia, Crystal, OCaml, R, AppleScript, Elixir, VB.NET, Clojure, Haxe, Obj-C, Rust, Racket, AutoHotkey, AutoIt, Kotlin, Dart, Pascal, Haskell, Nim, D, Lisp, Kit","version":"0.9.8","publisher":"formulahendry","icon":"images/logo.png","engines":{"vscode":"^1.17.0"},"categories":["Programming Languages","Other"],"keywords":["javascript","php","python","perl","ruby","multi-root ready"],"bugs":{"url":"https://github.com/formulahendry/vscode-code-runner/issues","email":"formulahendry@gmail.com"},"homepage":"https://github.com/formulahendry/vscode-code-runner/blob/master/README.md","repository":{"type":"git","url":"https://github.com/formulahendry/vscode-code-runner.git"},"activationEvents":["onCommand:code-runner.run","onCommand:code-runner.runCustomCommand","onCommand:code-runner.runByLanguage"],"main":"/home/doc/.vscode-oss/extensions/formulahendry.code-runner-0.9.8/out/src/extension","contributes":{"commands":[{"command":"code-runner.run","title":"Run Code","icon":{"light":"./images/run-light.png","dark":"./images/run-dark.png"}},{"command":"code-runner.runCustomCommand","title":"Run Custom Command"},{"command":"code-runner.runByLanguage","title":"Run By Language"},{"command":"code-runner.stop","title":"Stop Code Run"}],"keybindings":[{"command":"code-runner.run","key":"ctrl+alt+n"},{"command":"code-runner.runCustomCommand","key":"ctrl+alt+k"},{"command":"code-runner.runByLanguage","key":"ctrl+alt+j"},{"command":"code-runner.stop","key":"ctrl+alt+m"}],"menus":{"editor/context":[{"when":"!inOutput && config.code-runner.showRunCommandInEditorContextMenu","command":"code-runner.run","group":"navigation"},{"when":"inOutput","command":"code-runner.stop","group":"stop-code-run"}],"editor/title":[{"when":"config.code-runner.showRunIconInEditorTitleMenu","command":"code-runner.run","group":"navigation"}],"explorer/context":[{"when":"!explorerResourceIsFolder","command":"code-runner.run","group":"navigation"}]},"configuration":{"type":"object","title":"Run Code configuration","properties":{"code-runner.executorMapByGlob":{"type":"object","default":{"pom.xml":"cd $dir && mvn clean package"},"description":"Set the executor by glob.","scope":"resource"},"code-runner.executorMap":{"type":"object","default":{"javascript":"node","java":"cd $dir && javac $fileName && java $fileNameWithoutExt","c":"cd $dir && gcc $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","cpp":"cd $dir && g++ $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","objective-c":"cd $dir && gcc -framework Cocoa $fileName -o $fileNameWithoutExt && $dir$fileNameWithoutExt","php":"php","python":"python -u","perl":"perl","perl6":"perl6","ruby":"ruby","go":"go run","lua":"lua","groovy":"groovy","powershell":"powershell -ExecutionPolicy ByPass -File","bat":"cmd /c","shellscript":"bash","fsharp":"fsi","csharp":"scriptcs","vbscript":"cscript //Nologo","typescript":"ts-node","coffeescript":"coffee","scala":"scala","swift":"swift","julia":"julia","crystal":"crystal","ocaml":"ocaml","r":"Rscript","applescript":"osascript","clojure":"lein exec","haxe":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt","rust":"cd $dir && rustc $fileName && $dir$fileNameWithoutExt","racket":"racket","ahk":"autohotkey","autoit":"autoit3","dart":"dart","pascal":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt","d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt","haskell":"runhaskell","nim":"nim compile --verbosity:0 --hints:off --run","lisp":"sbcl --script","kit":"kitc --run"},"description":"Set the executor of each language.","scope":"resource"},"code-runner.executorMapByFileExtension":{"type":"object","default":{".vb":"cd $dir && vbc /nologo $fileName && $dir$fileNameWithoutExt",".vbs":"cscript //Nologo",".scala":"scala",".jl":"julia",".cr":"crystal",".ml":"ocaml",".exs":"elixir",".hx":"haxe --cwd $dirWithoutTrailingSlash --run $fileNameWithoutExt",".rkt":"racket",".ahk":"autohotkey",".au3":"autoit3",".kt":"cd $dir && kotlinc $fileName -include-runtime -d $fileNameWithoutExt.jar && java -jar $fileNameWithoutExt.jar",".kts":"kotlinc -script",".dart":"dart",".pas":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".pp":"cd $dir && fpc $fileName && $dir$fileNameWithoutExt",".d":"cd $dir && dmd $fileName && $dir$fileNameWithoutExt",".hs":"runhaskell",".nim":"nim compile --verbosity:0 --hints:off --run",".csproj":"dotnet run --project",".fsproj":"dotnet run --project",".lisp":"sbcl --script",".kit":"kitc --run"},"description":"Set the executor of each file extension.","scope":"resource"},"code-runner.customCommand":{"type":"string","default":"echo Hello","description":"Set the custom command to run.","scope":"resource"},"code-runner.languageIdToFileExtensionMap":{"type":"object","default":{"bat":".bat","powershell":".ps1","typescript":".ts"},"description":"Set the mapping of languageId to file extension.","scope":"resource"},"code-runner.defaultLanguage":{"type":"string","default":"","description":"Set the default language to run.","scope":"resource"},"code-runner.cwd":{"type":"string","default":"","description":"Set the working directory.","scope":"resource"},"code-runner.fileDirectoryAsCwd":{"type":"boolean","default":false,"description":"Whether to use the directory of the file to be executed as the working directory.","scope":"resource"},"code-runner.clearPreviousOutput":{"type":"boolean","default":false,"description":"Whether to clear previous output before each run.","scope":"resource"},"code-runner.saveAllFilesBeforeRun":{"type":"boolean","default":false,"description":"Whether to save all files before running.","scope":"resource"},"code-runner.saveFileBeforeRun":{"type":"boolean","default":false,"description":"Whether to save the current file before running.","scope":"resource"},"code-runner.enableAppInsights":{"type":"boolean","default":true,"description":"Whether to enable AppInsights to track user telemetry data.","scope":"resource"},"code-runner.showExecutionMessage":{"type":"boolean","default":true,"description":"Whether to show extra execution message like [Running] ... and [Done] ...","scope":"resource"},"code-runner.runInTerminal":{"type":"boolean","default":false,"description":"Whether to run code in Integrated Terminal.","scope":"resource"},"code-runner.terminalRoot":{"type":"string","default":"","description":"For Windows system, replaces the Windows style drive letter in the command with a Unix style root when using a custom shell as the terminal, like Bash or Cgywin. Example: Setting this to '/mnt/' will replace 'C:\\path' with '/mnt/c/path'","scope":"resource"},"code-runner.preserveFocus":{"type":"boolean","default":true,"description":"Whether to preserve focus on code editor after code run is triggered.","scope":"resource"},"code-runner.ignoreSelection":{"type":"boolean","default":false,"description":"Whether to ignore selection to always run entire file.","scope":"resource"},"code-runner.showRunIconInEditorTitleMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' icon in editor title menu.","scope":"resource"},"code-runner.showRunCommandInEditorContextMenu":{"type":"boolean","default":true,"description":"Whether to show 'Run Code' command in editor context menu.","scope":"resource"},"code-runner.temporaryFileName":{"type":"string","default":"tempCodeRunnerFile","description":"Temporary file name used in running selected code snippet. When it is set as empty, the file name will be random.","scope":"resource"},"code-runner.respectShebang":{"type":"boolean","default":true,"description":"Whether to respect Shebang to run code.","scope":"resource"}}},"languages":[{"id":"code-runner-output","mimetypes":["text/x-code-output"]}],"grammars":[{"language":"code-runner-output","scopeName":"code-runner.output","path":"./syntaxes/code-runner-output.tmLanguage"}]},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","tslint":"tslint -t verbose src/**/*.ts"},"dependencies":{"applicationinsights":"^0.19.0","micromatch":"^3.1.10","tree-kill":"^1.1.0"},"devDependencies":{"@types/micromatch":"^3.1.0","@types/mocha":"^2.2.32","@types/node":"^6.0.40","mocha":"^2.3.3","tslint":"^5.5.0","typescript":"^2.0.3","vscode":"^1.0.0"},"uuid":"a6a0c5b2-d078-4bf5-a9ee-4e37054414b3","isBuiltin":false,"isUnderDevelopment":false,"id":"formulahendry.code-runner","identifier":{"value":"formulahendry.code-runner","_lower":"formulahendry.code-runner"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/formulahendry.code-runner-0.9.8","path":"/home/doc/.vscode-oss/extensions/formulahendry.code-runner-0.9.8","scheme":"file"}},{"name":"vscode-rust","displayName":"Rust","description":"Rust language integration for VSCode","version":"0.4.2","publisher":"kalitaalexey","license":"MIT","icon":"images/icon.png","homepage":"https://github.com/KalitaAlexey/vscode-rust","repository":{"type":"git","url":"https://github.com/KalitaAlexey/vscode-rust"},"bugs":{"url":"https://github.com/KalitaAlexey/vscode-rust/issues","email":"kalita.alexey@outlook.com"},"engines":{"vscode":"^1.8.0"},"categories":["Languages","Linters","Snippets"],"activationEvents":["onLanguage:rust","onCommand:rust.cargo.new.bin","onCommand:rust.cargo.new.lib","onCommand:rust.cargo.new.playground","onCommand:rust.cargo.build.default","onCommand:rust.cargo.build.custom","onCommand:rust.cargo.clippy.default","onCommand:rust.cargo.clippy.custom","onCommand:rust.cargo.doc.default","onCommand:rust.cargo.doc.custom","onCommand:rust.cargo.run.default","onCommand:rust.cargo.run.custom","onCommand:rust.cargo.test.default","onCommand:rust.cargo.test.custom","onCommand:rust.cargo.bench","onCommand:rust.cargo.update","onCommand:rust.cargo.clean","onCommand:rust.cargo.check.default","onCommand:rust.cargo.check.custom","onCommand:rust.cargo.terminate"],"main":"/home/doc/.vscode-oss/extensions/kalitaalexey.vscode-rust-0.4.2/out/src/extension","contributes":{"languages":[{"id":"rust","aliases":["Rust"],"extensions":[".rs"]}],"snippets":[{"language":"rust","path":"./snippets/rust.json"}],"commands":[{"command":"rust.cargo.new.bin","title":"Cargo: Create new executable project","description":"Creating a new executable project"},{"command":"rust.cargo.new.lib","title":"Cargo: Create new library project","description":"Creating a new library project"},{"command":"rust.cargo.new.playground","title":"Cargo: Create playground","description":"Creating a project in a temporary directory"},{"command":"rust.cargo.build.default","title":"Cargo: Build","description":"Compile the current project"},{"command":"rust.cargo.build.custom","title":"Cargo: Build using custom configuration","description":"Compile the current project using custom configuration"},{"command":"rust.cargo.run.default","title":"Cargo: Run","description":"Build and execute src/main.rs"},{"command":"rust.cargo.run.custom","title":"Cargo: Run using custom configuration","description":"Build and execute src/main.rs using custom configuration"},{"command":"rust.cargo.doc.default","title":"Cargo: Doc","description":"Build this project's and its dependencies' documentation"},{"command":"rust.cargo.doc.custom","title":"Cargo: Doc using custom configuration","description":"Build this project's and its dependencies' documentation using custom configuration"},{"command":"rust.cargo.test.default","title":"Cargo: Test","description":"Run the tests"},{"command":"rust.cargo.test.custom","title":"Cargo: Test using custom configuration","description":"Run the tests using custom configuration"},{"command":"rust.cargo.bench","title":"Cargo: Bench","description":"Run the benchmarks"},{"command":"rust.cargo.update","title":"Cargo: Update","description":"Update dependencies listed in Cargo.lock"},{"command":"rust.cargo.clean","title":"Cargo: Clean","description":"Remove the target directory"},{"command":"rust.cargo.check.default","title":"Cargo: Check","description":"Check the project for warnings and errors"},{"command":"rust.cargo.check.custom","title":"Cargo: Check using custom configuration","description":"Check the main library of the project for warnings and errors using custom configuration"},{"command":"rust.cargo.clippy.default","title":"Cargo: Clippy","description":"Check project with clippy."},{"command":"rust.cargo.clippy.custom","title":"Cargo: Clippy using custom configuration","description":"Check project with clippy using custom configuration"},{"command":"rust.cargo.terminate","title":"Cargo: Terminate Running Task","description":"Terminate currently running cargo task"}],"configuration":{"title":"Rust extension configuration","type":"object","properties":{"rust.mode":{"type":["string","null"],"default":null,"description":"The mode in which the extension will function","enum":["legacy","rls",null]},"rust.racerPath":{"type":["string","null"],"default":null,"description":"Specifies path to Racer binary if it's not in PATH"},"rust.rustfmtPath":{"type":["string","null"],"default":null,"description":"Specifies path to Rustfmt binary if it's not in PATH"},"rust.rustsymPath":{"type":["string","null"],"default":null,"description":"Specifies path to Rustsym binary if it's not in PATH"},"rust.rustLangSrcPath":{"type":["string","null"],"default":null,"description":"Specifies path to /src directory of local copy of Rust sources"},"rust.showOutput":{"type":["boolean"],"default":true,"description":"Automatically show output panel when starting any cargo task"},"rust.cargoPath":{"type":["string","null"],"default":null,"description":"Specifies path to Cargo binary if it's not in PATH"},"rust.cargoHomePath":{"type":["string","null"],"default":null,"description":"Specifies path to home directory of Cargo. Mostly needed for working with custom installations of Rust via rustup or multirust."},"rust.cargoEnv":{"type":["object","null"],"default":null,"description":"Specifies custom variables to set when running cargo. Useful for crates which use env vars in their build.rs (like openssl-sys)."},"rust.cargoCwd":{"type":["string","null"],"default":null,"description":"Specifies the path of the directory where a cargo command would be executed"},"rust.executeCargoCommandInTerminal":{"type":"boolean","default":false,"description":"Indicating whether any cargo command should be executed in an integrated terminal. Used only in not RLS mode"},"rust.actionOnStartingCommandIfThereIsRunningCommand":{"default":"Stop running command","type":"string","enum":["Stop running command","Ignore new command","Show dialog to let me decide"]},"rust.actionOnSave":{"type":"string","default":null,"enum":["build","check","clippy","doc","run","test",null]},"rust.buildArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo build"},"rust.checkArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo check"},"rust.clippyArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo clippy"},"rust.docArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo doc"},"rust.runArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo run"},"rust.testArgs":{"type":"array","default":[],"description":"Arguments which is passed to cargo test"},"rust.customBuildConfigurations":{"default":[{"title":"Release","args":["--release"]}],"description":"Custom configurations for cargo build. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo build`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.customCheckConfigurations":{"default":[{"title":"Release","args":["--release"]}],"description":"Custom configurations for cargo check. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo check`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.customClippyConfigurations":{"default":[],"description":"Custom configurations for cargo clippy. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo clippy`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.customDocConfigurations":{"default":[],"description":"Custom configurations for cargo doc. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo doc`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.customRunConfigurations":{"default":[{"title":"Release","args":["--release"]}],"description":"Custom configurations for cargo run. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo run`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.customTestConfigurations":{"default":[{"title":"Release","args":["--release"]}],"description":"Custom configurations for cargo test. Array of objects with `title` (string) and `args` (array of strings) which will be passed to `cargo test`.","items":{"properties":{"title":{"type":"string"},"args":{"type":"array","items":{"type":"string"}}},"required":["title","args"]},"type":"array"},"rust.rustup":{"default":null,"description":"rustup configuration","properties":{"toolchain":{"default":null,"description":"The toolchain to use for installing components (rust-src), except RLS","type":["string","null"]},"nightlyToolchain":{"default":null,"description":"The nightly toolchain to use for installing RLS and related components and running RLS","type":["string","null"]}}},"rust.rls":{"default":null,"description":"Rust Language Server configuration","properties":{"executable":{"default":"rls","description":"An executable to run as a language server","type":"string"},"args":{"default":null,"description":"Arguments to pass to the executable","items":{"type":"string"},"type":["array","null"]},"env":{"default":null,"description":"An environment to run the executable in","type":["object","null"]},"revealOutputChannelOn":{"default":"error","description":"Specifies when the output channel should be revealed","enum":["info","warn","error","never"],"type":"string"},"useRustfmt":{"default":null,"description":"Specified whether rustfmt should be used for formatting","type":["boolean","null"]}}}}}},"scripts":{"vscode:prepublish":"tsc -p .","compile":"tsc -watch -p .","gulp":"node ./node_modules/gulp/bin/gulp.js","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"gulp":"3.9.1","gulp-shell":"0.5.2","gulp-tslint":"7.1.0","mocha":"3.2.0","tslint":"5.1.0","typescript":"2.2.1","vscode":"1.1.0","@types/node":"7.0.11","@types/mocha":"2.2.40","@types/open":"0.0.29","@types/which":"1.0.28"},"dependencies":{"expand-tilde":"2.0.2","tmp":"0.0.31","open":"0.0.5","tree-kill":"1.1.0","find-up":"2.1.0","elegant-spinner":"1.0.1","vscode-languageclient":"3.2.0","which":"1.2.14"},"uuid":"da00c08c-ff11-4cf3-b619-fdbd967d44c5","isBuiltin":false,"isUnderDevelopment":false,"id":"kalitaalexey.vscode-rust","identifier":{"value":"kalitaalexey.vscode-rust","_lower":"kalitaalexey.vscode-rust"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/kalitaalexey.vscode-rust-0.4.2","path":"/home/doc/.vscode-oss/extensions/kalitaalexey.vscode-rust-0.4.2","scheme":"file"}},{"name":"color-highlight","displayName":"Color Highlight","description":"Highlight web colors in your editor","version":"2.3.0","publisher":"naumovs","engines":{"vscode":"^1.10.0"},"categories":["Other"],"activationEvents":["*"],"scripts":{"vscode:prepublish":"webpack","dev":"webpack -w","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"license":"MIT","bugs":{"url":"https://github.com/naumovs/vscode-ext-color-highlight/issues"},"homepage":"https://github.com/naumovs/vscode-ext-color-highlight","repository":{"type":"git","url":"https://github.com/naumovs/vscode-ext-color-highlight.git"},"main":"/home/doc/.vscode-oss/extensions/naumovs.color-highlight-2.3.0/dist/extension","icon":"images/preview.png","contributes":{"configuration":{"title":"Color Highlight","properties":{"color-highlight.enable":{"default":true,"description":"Controls if plugin is enabled","type":"boolean"},"color-highlight.languages":{"default":["*"],"description":"An array of language ids which should be higlighted by Color Highlight. \"*\" to trigger on any language; Prepend language id with \"!\" to exclude the language (i.e \"!typescript\", \"!javascript\")","type":"array"},"color-highlight.matchWords":{"default":false,"description":"Highlight color words in all files (grey, green, etc.)","type":"boolean"},"color-highlight.markerType":{"default":"background","description":"Style of the highlight. Can be 'dot-before', 'dot-after', 'foreground', 'background', 'outline', 'underline'","type":"string"},"color-highlight.markRuler":{"default":true,"description":"Highlight colors on the ruler (scroll bar), true/false","type":"boolean"},"color-highlight.sass.includePaths":{"default":[],"description":"Array of absolute paths to search while perform file lookups.","type":"array"}}},"commands":[{"command":"extension.colorHighlight","title":"Highlight colors in current file"}]},"devDependencies":{"@types/mocha":"^2.2.32","@types/node":"^6.0.40","babel-core":"^6.23.0","babel-eslint":"^7.2.1","babel-loader":"^7.0.0-beta.1","babel-plugin-transform-runtime":"^6.23.0","babel-preset-latest":"^6.23.0","eslint":"^3.18.0","mocha":"^2.3.3","vscode":"^1.0.0","webpack":"^2.3.2"},"dependencies":{"color":"^1.0.3","color-name":"^1.1.2","file-importer":"^1.0.0"},"uuid":"121396ad-85a1-45ec-9fd1-d95028a847f5","isBuiltin":false,"isUnderDevelopment":false,"id":"naumovs.color-highlight","identifier":{"value":"naumovs.color-highlight","_lower":"naumovs.color-highlight"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/naumovs.color-highlight-2.3.0","path":"/home/doc/.vscode-oss/extensions/naumovs.color-highlight-2.3.0","scheme":"file"}},{"name":"indent-rainbow","description":"Makes indentation easier to read","version":"7.4.0","publisher":"oderwat","author":{"name":"Hans Raaf"},"icon":"assets/icon.png","license":"MIT","engines":{"vscode":"0.10.x"},"repository":{"url":"https://github.com/oderwat/vscode-indent-rainbow.git","type":"git"},"bugs":{"url":"https://github.com/oderwat/vscode-indent-rainbow/issues"},"categories":["Other"],"activationEvents":["*"],"contributes":{"configuration":{"type":"object","title":"Indent-Rainbow configuration","properties":{"indentRainbow.includedLanguages":{"type":"array","default":[],"description":"For which languages indent-rainbow should be activated. When empty will use for all languages."},"indentRainbow.excludedLanguages":{"type":"array","default":["plaintext"],"description":"For which languages indent-rainbow should be deactivated. When left empty will ignore."},"indentRainbow.ignoreErrorLanguages":{"type":"array","default":["markdown"],"description":"For which languages indent-rainbow should skip indent error detection (use '*' to deavtivate errors for all languages)."},"indentRainbow.updateDelay":{"type":"integer","default":100,"description":"The delay in ms until the editor gets updated."},"indentRainbow.indentSetter":{"type":"object","default":{},"description":"Automatically change indent settings for languages (see README.md for details)."},"indentRainbow.errorColor":{"type":"string","default":"rgba(128,32,32,0.6)","description":"Indent color for when there is an error in the indentation, for example if you have your tabs set to 2 spaces but the indent is 3 spaces. Can be any type of web based color format (hex, rgba, rgb)."},"indentRainbow.tabmixColor":{"type":"string","default":"rgba(128,32,96,0.6)","description":"Indent color for when there is a mix between spaces and tabs in the indentation. Can be any type of web based color format (hex, rgba, rgb) or a empty string(to be disabled this coloring)."},"indentRainbow.ignoreLinePatterns":{"type":"array","default":["/[ \t]* [*]/g","/[ \t]+[/]{2}/g"],"description":"Skip error highlighting for RegEx patterns. Defaults to c/cpp decorated block and full line comments."},"indentRainbow.colors":{"type":"array","default":["rgba(255,255,64,0.07)","rgba(127,255,127,0.07)","rgba(255,127,255,0.07)","rgba(79,236,236,0.07)"],"description":"An array with color (hex, rgba, rgb) strings which are used as colors, can be any length."}}}},"main":"/home/doc/.vscode-oss/extensions/oderwat.indent-rainbow-7.4.0/out/extension","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install"},"devDependencies":{"@types/node":"^6.0.40","typescript":"^2.0.3","vscode":"^1.1.30"},"dependencies":{"vsce":"^1.57.1"},"uuid":"eaa2127d-cb69-4ab9-8505-a60c9ee5f28b","isBuiltin":false,"isUnderDevelopment":false,"id":"oderwat.indent-rainbow","identifier":{"value":"oderwat.indent-rainbow","_lower":"oderwat.indent-rainbow"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/oderwat.indent-rainbow-7.4.0","path":"/home/doc/.vscode-oss/extensions/oderwat.indent-rainbow-7.4.0","scheme":"file"}},{"name":"material-icon-theme","displayName":"Material Icon Theme","description":"Material Design Icons for Visual Studio Code","version":"3.7.0","publisher":"PKief","engines":{"vscode":"^1.5.0"},"homepage":"https://github.com/PKief/vscode-material-icon-theme/blob/master/README.md","repository":{"type":"git","url":"https://github.com/PKief/vscode-material-icon-theme.git"},"bugs":{"url":"https://github.com/PKief/vscode-material-icon-theme/issues"},"icon":"logo.png","galleryBanner":{"color":"#263238","theme":"dark"},"categories":["Themes"],"keywords":["icons","theme","material","icon-theme","customization"],"activationEvents":["*"],"main":"/home/doc/.vscode-oss/extensions/pkief.material-icon-theme-3.7.0/dist/extension","contributes":{"iconThemes":[{"id":"material-icon-theme","label":"Material Icon Theme","path":"./dist/material-icons.json","_watch":true}],"commands":[{"command":"material-icon-theme.activateIcons","title":"Material Icons: Activate Icon Theme"},{"command":"material-icon-theme.toggleIconPacks","title":"Material Icons: Configure Icon Packs"},{"command":"material-icon-theme.changeFolderTheme","title":"Material Icons: Change Folder Theme"},{"command":"material-icon-theme.changeFolderColor","title":"Material Icons: Change Folder Color"},{"command":"material-icon-theme.restoreDefaultConfig","title":"Material Icons: Restore Default Configuration"},{"command":"material-icon-theme.hidesExplorerArrows","title":"Material Icons: Hide Folder Arrows"},{"command":"material-icon-theme.opacity","title":"Material Icons: Change Opacity"},{"command":"material-icon-theme.grayscale","title":"Material Icons: Toggle Grayscale"},{"command":"material-icon-theme.saturation","title":"Material Icons: Change Saturation"}],"configuration":{"type":"object","title":"Material Icons","properties":{"material-icon-theme.showWelcomeMessage":{"type":"boolean","default":true,"description":"Show the welcome message after first installation."},"material-icon-theme.showUpdateMessage":{"type":"boolean","default":false,"description":"Show the update message after each update."},"material-icon-theme.showReloadMessage":{"type":"boolean","default":true,"description":"Show restart notification."},"material-icon-theme.activeIconPack":{"type":"string","default":"angular","description":"Select an icon pack that enables specific icons.","enumDescriptions":["Icons for Angular.","Icons for Angular and ngrx.","Icons for React.","Icons for React and Redux.","No icon pack enabled."],"enum":["angular","angular_ngrx","react","react_redux","none"]},"material-icon-theme.files.associations":{"type":"object","default":{},"description":"Set custom file icon associations."},"material-icon-theme.folders.associations":{"type":"object","default":{},"description":"Set custom folder icon associations."},"material-icon-theme.languages.associations":{"type":"object","default":{},"description":"Set custom language icon associations."},"material-icon-theme.folders.theme":{"type":"string","default":"specific","description":"Set the type for the folder icons.","enumDescriptions":["Select specific folder icons.","Select classic folder icons.","No folder icons."],"enum":["specific","classic","none"]},"material-icon-theme.folders.color":{"type":"string","default":"#90a4ae","pattern":"^#([A-Fa-f0-9]{6}|[A-Fa-f0-9]{3})$","description":"Change the color of the folder icons."},"material-icon-theme.opacity":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the opacity of the icons."},"material-icon-theme.hidesExplorerArrows":{"type":"boolean","default":false,"description":"Hide explorer arrows before folder."},"material-icon-theme.saturation":{"type":"number","default":1,"minimum":0,"maximum":1,"description":"Change the saturation of the icons."}}}},"scripts":{"build":"npm run compile:dev && npm run postcompile","check":"ts-node ./src/scripts/icons/checks","compile":"webpack --mode production","compile:dev":"webpack --mode none","compile:watch":"webpack --mode none --watch","generateJson":"ts-node ./src/scripts/icons/generateJson.ts","lint":"tslint -c tslint.json ./src/**/*.ts","postcompile":"npm run generateJson && npm run check","postinstall":"node ./node_modules/vscode/bin/install","pretest":"npm run build && npm run test-compile","preview":"ts-node ./src/scripts/preview","test":"node ./node_modules/vscode/bin/test","test-compile":"tsc -p ./","vscode:prepublish":"npm run lint && npm run compile"},"dependencies":{"lodash.merge":"^4.6.1","opn":"^5.5.0","semver":"^5.6.0"},"devDependencies":{"@types/mocha":"^5.2.6","@types/node":"^11.11.6","@types/puppeteer":"^1.12.3","clean-webpack-plugin":"^2.0.1","mocha":"^6.0.2","puppeteer":"^1.13.0","rimraf":"^2.6.3","ts-loader":"^5.3.3","ts-node":"^8.0.3","tslint":"^5.14.0","typescript":"^3.3.4000","vscode":"^1.1.33","webpack":"^4.29.6","webpack-cli":"^3.3.0"},"uuid":"5db78037-f674-459f-a236-db622c427c5b","isBuiltin":false,"isUnderDevelopment":false,"id":"PKief.material-icon-theme","identifier":{"value":"PKief.material-icon-theme","_lower":"pkief.material-icon-theme"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/pkief.material-icon-theme-3.7.0","path":"/home/doc/.vscode-oss/extensions/pkief.material-icon-theme-3.7.0","scheme":"file"}},{"name":"LiveServer","displayName":"Live Server","description":"Launch a development local Server with live reload feature for static & dynamic pages","version":"5.6.1","publisher":"ritwickdey","author":{"name":"Ritwick Dey","email":"ritwickdey@outlook.com","url":"http://twitter.com/Dey_Ritwick"},"engines":{"vscode":"^1.20.0"},"categories":["Other"],"keywords":["html preview","live preview","live reload","svg preview","open in browser","multi-root ready"],"preview":false,"galleryBanner":{"color":"#41205f","theme":"dark"},"activationEvents":["*"],"main":"/home/doc/.vscode-oss/extensions/ritwickdey.liveserver-5.6.1/out/src/extension","contributes":{"commands":[{"command":"extension.liveServer.goOffline","title":"Stop Live Server","category":"Live Server"},{"command":"extension.liveServer.goOnline","title":"Open with Live Server","category":"Live Server"},{"command":"extension.liveServer.changeWorkspace","title":"Change Live Server workspace","category":"Live Server"}],"keybindings":[{"command":"extension.liveServer.goOffline","key":"alt+L alt+C","when":"editorTextFocus","mac":"cmd+L cmd+C"},{"command":"extension.liveServer.goOnline","key":"alt+L alt+O","when":"editorTextFocus","mac":"cmd+L cmd+O"}],"menus":{"editor/context":[{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOffline","group":"myGrp@liveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"myGrp@liveServer","when":"resourceLangId == xml"}],"explorer/context":[{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == html"},{"command":"extension.liveServer.goOnline","group":"navigation@-LiveServer","when":"resourceLangId == xml"}]},"configuration":{"title":"Live Server Config","properties":{"liveServer.settings.port":{"type":["number"],"default":5500,"minimum":0,"maximum":65535,"description":"Set Custom Port Number of Live Server. Set 0 if you want random port."},"liveServer.settings.root":{"type":["string"],"default":"/","pattern":"/|/[^\\/]","description":"Set Custom root of Live Server. \nTo change root the the server to sub folder of workspace, use '/' and relative path from workspace. \nExample: /subfolder1/subfolder2"},"liveServer.settings.useBrowserPreview":{"type":"boolean","default":false,"description":"Open in Browser Preview inside VS Code, instead of default browser"},"liveServer.settings.CustomBrowser":{"type":["string","null"],"default":null,"enum":["chrome","chrome:PrivateMode","firefox","firefox:PrivateMode","microsoft-edge","blisk",null],"description":"Specify custom browser settings for Live Server. \nBy Default it will open your default favorite browser."},"liveServer.settings.ChromeDebuggingAttachment":{"type":["boolean"],"default":false,"description":"Enable Chrome Debugging Attachment to Live Server at Debuging Port 9222.\n NOTE: You have to install 'Debugger for Chrome' \nIf the value is true, Select 'Attach to Chrome' from Debug Window to start debugging. \n\n CAUTION: If it is true, 'Launch Chrome against localhost' may not work."},"liveServer.settings.AdvanceCustomBrowserCmdLine":{"type":["string","null"],"default":null,"description":"Note: If it is not Null, It will override CustomBrowser and ChromeDebuggingAttachment settings.\n\n Examples : \nchrome --incognito --headless --remote-debugging-port=9222 \n C:\\\\Program Files\\\\Firefox Developer Edition\\\\firefox.exe --private-window"},"liveServer.settings.showOnStatusbar":{"type":"boolean","default":true,"description":"Change this to false if you don't want the button to show in the statusbar"},"liveServer.settings.NoBrowser":{"type":"boolean","default":false,"description":"If it is true live server will start without browser opened."},"liveServer.settings.ignoreFiles":{"type":"array","default":[".vscode/**","**/*.scss","**/*.sass","**/*.ts"],"description":"To ignore specific file changes"},"liveServer.settings.mount":{"type":"array","items":{"type":"array","minItems":2,"maxItems":2,"items":{"type":"string"}},"default":[],"description":"Mount a directory to a route. Such as [['/components', './node_modules']]"},"liveServer.settings.donotShowInfoMsg":{"type":"boolean","default":false,"description":"To disable information pop up messages."},"liveServer.settings.donotVerifyTags":{"type":"boolean","default":false,"description":"To turn off prompt warning message if body or head or other supporting tag is missing in your HTML."},"liveServer.settings.host":{"type":"string","default":"127.0.0.1","description":"To switch between localhost or 127.0.0.1 or anything else. Default is 127.0.0.1"},"liveServer.settings.useLocalIp":{"type":"boolean","default":false,"description":"Use local IP as host"},"liveServer.settings.proxy":{"type":"object","default":{"enable":false,"baseUri":"/","proxyUri":"http://127.0.0.1:80"},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable the feature."},"baseUri":{"type":"string","default":"/","pattern":""},"proxyUri":{"type":"string","default":"http://127.0.0.1:80","pattern":"(^http[s]?://)(.[^(\\|\\s)]+)$"}},"required":["enable","baseUri","proxyUri"],"additionalProperties":false,"description":"To Setup Proxy"},"liveServer.settings.useWebExt":{"type":"boolean","default":false,"description":"You have to install a browser extension. That will be works for your dynamic pages (like PHP)."},"liveServer.settings.wait":{"type":"number","default":100,"description":"Delay before live reloading. Value in milliseconds. Default is 100"},"liveServer.settings.fullReload":{"type":"boolean","default":false,"description":"By Default Live Server inject CSS changes without full reloading of browser. You can change this behviour by making this setting as `true`"},"liveServer.settings.https":{"type":"object","default":{"enable":false,"cert":"","key":"","passphrase":""},"properties":{"enable":{"type":"boolean","default":false,"description":"Make it true to enable it."},"cert":{"type":"string","default":"","description":"Add full path certificate."},"key":{"type":"string","default":"","description":"Add full path key"},"passphrase":{"type":"string","default":"","description":"Add Pass Phrase."}},"required":["enable","cert","key","passphrase"],"additionalProperties":false,"description":"Setup https configuration"},"liveServer.settings.file":{"type":"string","default":"","description":"When set, serve this file (server root relative) for every 404 (useful for single-page applications)"},"liveServer.settings.multiRootWorkspaceName":{"type":"string","default":null,"description":"This the entry point of server when you're in multiroot workspace"}}}},"license":"MIT","icon":"images/icon.png","bugs":{"url":"https://github.com/ritwickdey/vscode-live-server/issues","email":"ritwickdey@outlook.com"},"repository":{"type":"git","url":"https://github.com/ritwickdey/vscode-live-server.git"},"homepage":"https://ritwickdey.github.io/vscode-live-server/","scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test","lint":"tslint --project .","precommit":"npm run lint","prepush":"npm run lint"},"husky":{"hooks":{"pre-commit":"npm run precommit","pre-push":"npm run prepush"}},"devDependencies":{"@types/mocha":"^2.2.48","@types/node":"^9.6.40","husky":"^1.2.1","mocha":"^5.0.4","tslint":"^5.11.0","typescript":"^2.7.2","vscode":"^1.1.26","webpack":"^4.30.0","webpack-cli":"^3.3.0"},"dependencies":{"http-shutdown":"^1.2.0","ips":"^2.1.3","live-server":"file:lib\\live-server","opn":"^5.4.0","vsls":"^0.3.967"},"announcement":{"onVersion":"5.6.1","message":"[NEW] LiveServer@5.6: BrowserPreview integration, auto fallback to random port & fixes."},"uuid":"b63c44fd-0457-4696-99e9-dbfdf70d77de","isBuiltin":false,"isUnderDevelopment":false,"id":"ritwickdey.LiveServer","identifier":{"value":"ritwickdey.LiveServer","_lower":"ritwickdey.liveserver"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/ritwickdey.liveserver-5.6.1","path":"/home/doc/.vscode-oss/extensions/ritwickdey.liveserver-5.6.1","scheme":"file"}},{"name":"rust","displayName":"Rust (rls)","description":"Rust language support - code completion, Intellisense, refactoring, reformatting, errors, snippets. A client for the Rust Language Server, built by the RLS team.","version":"0.6.1","publisher":"rust-lang","icon":"rust-icon.png","galleryBanner":{"color":"#336356","theme":"dark"},"engines":{"vscode":"^1.31.0"},"license":"(MIT OR Apache-2.0)","repository":{"type":"git","url":"https://github.com/rust-lang-nursery/rls-vscode"},"bugs":{"url":"https://github.com/rust-lang-nursery/rls-vscode/issues"},"categories":["Programming Languages","Linters","Snippets","Formatters","Other"],"keywords":["rust","rust-lang","rls","multi-root ready"],"preview":true,"activationEvents":["onLanguage:rust","workspaceContains:Cargo.toml"],"main":"/home/doc/.vscode-oss/extensions/rust-lang.rust-0.6.1/out/extension.js","scripts":{"vscode:prepublish":"npm run check:version && npm run lint && npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","lint":"tslint --config ./tslint.json './src/**/*.ts'","test":"npm run compile && node ./node_modules/vscode/bin/test","prettier":"prettier **/*.ts","check:version":"node cmd/check-version.js","postinstall":"node ./node_modules/vscode/bin/install","installDevExtension":"npm install && ./node_modules/.bin/vsce package -o ./out/rls-vscode-dev.vsix && code --install-extension ./out/rls-vscode-dev.vsix"},"dependencies":{"vscode-languageclient":"^4.3.0"},"devDependencies":{"@types/mocha":"^2.2.43","@types/node":"~10.1.0","prettier":"^1.16.4","tslint":"^5.14.0","tslint-config-prettier":"^1.18.0","typescript":"^3.0.0","vsce":"^1.58.0","vscode":"^1.1.30"},"contributes":{"languages":[{"id":"rust","extensions":[".rs"],"configuration":"./language-configuration.json"}],"snippets":[{"language":"rust","path":"./snippets/rust.json"}],"commands":[{"command":"rls.findImpls","title":"Find Implementations","description":"Show impl blocks for trait, struct, or enum","category":"Rust"},{"command":"rls.update","title":"Update the RLS","description":"Use Rustup to update Rust, the RLS, and required data","category":"Rust"},{"command":"rls.restart","title":"Restart the RLS","description":"Sometimes, it's just best to try turning it off and on again","category":"Rust"}],"menus":{"editor/context":[{"command":"rls.findImpls","when":"editorLangId == rust && editorHasReferenceProvider","group":"navigation@4"}]},"taskDefinitions":[{"type":"cargo","properties":{"subcommand":{"type":"string"}},"required":["subcommand"]}],"problemMatchers":[{"name":"rustc","owner":"rust","fileLocation":["relative","${workspaceRoot}"],"pattern":[{"regexp":"^(warning|warn|error)(\\[(.*)\\])?: (.*)$","severity":1,"message":4,"code":3},{"regexp":"^([\\s->=]*(.*):(\\d*):(\\d*)|.*)$","file":2,"line":3,"column":4},{"regexp":"^.*$"},{"regexp":"^([\\s->=]*(.*):(\\d*):(\\d*)|.*)$","file":2,"line":3,"column":4}]}],"configuration":{"type":"object","title":"Rust configuration","properties":{"rust-client.logToFile":{"type":"boolean","default":false,"description":"When set to true, RLS stderr is logged to a file at workspace root level. Requires reloading extension after change."},"rust-client.rustupPath":{"type":"string","default":"rustup","description":"Path to rustup executable. Ignored if rustup is disabled."},"rust-client.useWSL":{"type":"boolean","default":false,"description":"When set to true, RLS is started within Windows Subsystem for Linux."},"rust-client.rlsPath":{"type":["string","null"],"default":null,"description":"Override RLS path. Only required for RLS developers. If you set this and use rustup, you should also set `rust-client.channel` to ensure your RLS sees the right libraries. If you don't use rustup, make sure to set `rust-client.disableRustup`."},"rust-client.revealOutputChannelOn":{"type":"string","enum":["info","warn","error","never"],"default":"never","description":"Specifies message severity on which the output channel will be revealed. Requires reloading extension after change."},"rust-client.updateOnStartup":{"type":"boolean","default":false,"description":"Update the RLS whenever the extension starts up."},"rust-client.disableRustup":{"type":"boolean","default":false,"description":"Disable usage of rustup and use rustc/rls from PATH."},"rust-client.channel":{"type":["string",null],"enum":["stable","beta","nightly"],"default":null,"description":"Rust channel to invoke rustup with. Ignored if rustup is disabled. By default, uses the same channel as your currently open project."},"rust-client.trace.server":{"type":"string","enum":["off","messages","verbose"],"default":"off","description":"Traces the communication between VS Code and the Rust language server.","scope":"window"},"rust-client.nestedMultiRootConfigInOutermost":{"type":"boolean","default":true,"description":"If one root workspace folder is nested in another root folder, look for the Rust config in the outermost root."},"rust.sysroot":{"type":["string","null"],"default":null,"description":"--sysroot","scope":"resource"},"rust.target":{"type":["string","null"],"default":null,"description":"--target","scope":"resource"},"rust.rustflags":{"type":["string","null"],"default":null,"description":"Flags added to RUSTFLAGS.","scope":"resource"},"rust.clear_env_rust_log":{"type":"boolean","default":true,"description":"Clear the RUST_LOG environment variable before running rustc or cargo.","scope":"resource"},"rust.build_lib":{"type":["boolean","null"],"default":null,"description":"Specify to run analysis as if running `cargo check --lib`. Use `null` to auto-detect. (unstable)","scope":"resource"},"rust.build_bin":{"type":["string","null"],"default":null,"description":"Specify to run analysis as if running `cargo check --bin <name>`. Use `null` to auto-detect. (unstable)","scope":"resource"},"rust.cfg_test":{"type":"boolean","default":false,"description":"Build cfg(test) code. (unstable)","scope":"resource"},"rust.unstable_features":{"type":"boolean","default":false,"description":"Enable unstable features.","scope":"resource"},"rust.wait_to_build":{"type":"number","default":1500,"description":"Time in milliseconds between receiving a change notification and starting build.","scope":"resource"},"rust.show_warnings":{"type":"boolean","default":true,"description":"Show warnings.","scope":"resource"},"rust.use_crate_blacklist":{"type":"boolean","default":true,"description":"Don't index crates on the crate blacklist.","scope":"resource"},"rust.build_on_save":{"type":"boolean","default":false,"description":"Only index the project when a file is saved and not on change.","scope":"resource"},"rust.features":{"type":"array","default":[],"description":"A list of Cargo features to enable.","scope":"resource"},"rust.all_features":{"type":"boolean","default":false,"description":"Enable all Cargo features.","scope":"resource"},"rust.no_default_features":{"type":"boolean","default":false,"description":"Do not enable default Cargo features.","scope":"resource"},"rust.racer_completion":{"type":"boolean","default":true,"description":"Enables code completion using racer.","scope":"resource"},"rust.clippy_preference":{"type":"string","enum":["on","opt-in","off"],"default":"opt-in","description":"Controls eagerness of clippy diagnostics when available. Valid values are (case-insensitive):\n - \"off\": Disable clippy lints.\n - \"opt-in\": Clippy lints are shown when crates specify `#![warn(clippy)]`.\n - \"on\": Clippy lints enabled for all crates in workspace.\nYou need to install clippy via rustup if you haven't already.","scope":"resource"},"rust.jobs":{"type":["number","null"],"default":null,"description":"Number of Cargo jobs to be run in parallel.","scope":"resource"},"rust.all_targets":{"type":"boolean","default":true,"description":"Checks the project as if you were running cargo check --all-targets (I.e., check all targets and integration tests too).","scope":"resource"},"rust.target_dir":{"type":["string","null"],"default":null,"description":"When specified, it places the generated analysis files at the specified target directory. By default it is placed target/rls directory.","scope":"resource"},"rust.rustfmt_path":{"type":["string","null"],"default":null,"description":"When specified, RLS will use the Rustfmt pointed at the path instead of the bundled one","scope":"resource"},"rust.build_command":{"type":["string","null"],"default":null,"description":"EXPERIMENTAL (requires `unstable_features`)\nIf set, executes a given program responsible for rebuilding save-analysis to be loaded by the RLS. The program given should output a list of resulting .json files on stdout. \nImplies `rust.build_on_save`: true.","scope":"resource"},"rust.full_docs":{"type":["boolean","null"],"default":null,"description":"Instructs cargo to enable full documentation extraction during save-analysis while building the crate.","scope":"resource"},"rust.show_hover_context":{"type":"boolean","default":true,"description":"Show additional context in hover tooltips when available. This is often the type local variable declaration.","scope":"resource"}}}},"uuid":"570e6089-b871-41df-9cf4-a723cb34ef01","isBuiltin":false,"isUnderDevelopment":false,"id":"rust-lang.rust","identifier":{"value":"rust-lang.rust","_lower":"rust-lang.rust"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/rust-lang.rust-0.6.1","path":"/home/doc/.vscode-oss/extensions/rust-lang.rust-0.6.1","scheme":"file"}},{"name":"vscode-header-source","displayName":"Header source switch","description":"Header-source switcher for vscode","version":"1.3.0","publisher":"ryzngard","bugs":{"url":"https://github.com/ryzngard/header-source-switch/issues"},"homepage":"https://github.com/ryzngard/header-source-switch","repository":{"url":"https://github.com/ryzngard/header-source-switch","type":"github"},"license":"MIT","engines":{"vscode":"^1.30.0"},"categories":["Other"],"activationEvents":["onCommand:extension.switch","onCommand:extension.switchRightPane","onCommand:extension.switchLeftPane","onCommand:extension.toggleTracker"],"main":"/home/doc/.vscode-oss/extensions/ryzngard.vscode-header-source-1.3.0/out/src/extension","contributes":{"commands":[{"command":"extension.switch","title":"Switch Header/Source"},{"command":"extension.switchRightPane","title":"Switch Header/Source To Right Pane"},{"command":"extension.switchLeftPane","title":"Switch Header/Source To Left Pane"},{"command":"extension.toggleTracker","title":"Toggle Header/Source Tracking Mode"}],"keybindings":[{"command":"extension.switch","key":"alt+o"},{"command":"extension.switchRightPane","key":"shift+alt+o"}],"configuration":{"title":"Settings for header-source-switch","type":"object","properties":{"headerSourceSwitch.mappings":{"type":"array","description":"Array of mappings, defaults to C++ mappings","default":[{"header":[".h",".hpp",".hh",".hxx"],"source":[".cpp",".c",".cc",".cxx",".m",".mm"],"name":"C++"}]}}}},"scripts":{"vscode:prepublish":"tsc -p ./","compile":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^3.2.2","vscode":"^1.1.26","mocha":"^5.2.0","@types/node":"^10.12.17","@types/mocha":"^5.2.5"},"dependencies":{"file-exists":"^5.0.1"},"uuid":"9f557990-5179-4a87-9936-fcc29e818452","isBuiltin":false,"isUnderDevelopment":false,"id":"ryzngard.vscode-header-source","identifier":{"value":"ryzngard.vscode-header-source","_lower":"ryzngard.vscode-header-source"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/ryzngard.vscode-header-source-1.3.0","path":"/home/doc/.vscode-oss/extensions/ryzngard.vscode-header-source-1.3.0","scheme":"file"}},{"name":"crates","displayName":"crates","description":"Helps Rust developers managing dependencies with Cargo.toml. Only works with dependencies from crates.io.","version":"0.4.2","publisher":"serayuzgur","author":{"name":"serayuzgur","email":"serayuzgur@gmail.com"},"license":"SEE LICENSE IN LICENSE","bugs":{"url":"https://github.com/serayuzgur/crates/issues","email":"serayuzgur@gmail.com"},"homepage":"https://github.com/serayuzgur/crates/blob/master/README.md","engines":{"vscode":"^1.23.0"},"repository":{"type":"git","url":"https://github.com/serayuzgur/crates.git"},"icon":"icon.png","keywords":["rust","crates","crate","dependencies","crates.io","cargo","toml","extension","vscode"],"categories":["Programming Languages","Other"],"activationEvents":["onLanguage:toml","workspaceContains:Cargo.toml"],"contributes":{"commands":[{"command":"crates.replaceVersion","title":"Do not call manualy ! Replace Version of the provided dependency","category":"👆 Crates"},{"command":"crates.retry","title":"Retry to fetch Cargo.toml","category":"👆 Crates"},{"command":"crates.updateAll","title":"Update All dependencies of the Cargo.toml","category":"👆 Crates"}],"configuration":{"type":"object","title":"Crates","properties":{"crates.upToDateDecorator":{"type":"string","scope":"resource","default":"👍","description":"The text to show when dependency is up to date."},"crates.latestDecorator":{"type":"string","scope":"resource","default":"Latest: ${version}","description":"The text template to show when dependency is not up to date. ${version} will be replaced by the latest version info."},"crates.listPreReleases":{"type":"boolean","scope":"resource","default":false,"description":"If true, pre-release versions will be available."}}}},"main":"/home/doc/.vscode-oss/extensions/serayuzgur.crates-0.4.2/out/extension","scripts":{"build":"npm run compile","vscode:prepublish":"npm run compile","compile":"tsc -p ./","watch":"tsc -watch -p ./","postinstall":"node ./node_modules/vscode/bin/install","test":"npm run compile && node ./node_modules/vscode/bin/test","test-mocha":"npm run compile && mocha --recursive --require ts-node/register \"./**/*.test.ts\"","test-mocha-w":"mocha --watch --recursive --require ts-node/register \"./**/*.test.ts\" --watch --watch-extensions ts \"./**/*.test.ts\""},"devDependencies":{"@types/mocha":"5.2.6","@types/node":"11.11.3","@types/request-promise":"4.1.42","mocha":"^6.1.2","ts-node":"8.0.3","tslint":"5.14.0","typescript":"3.3.3333","vscode":"1.1.30"},"dependencies":{"compare-versions":"3.4.0","request":"2.88.0","request-promise":"4.2.4","url-parse":"1.4.4"},"uuid":"6a95a3fd-3a5d-4326-b8ab-1b1653b1f183","isBuiltin":false,"isUnderDevelopment":false,"id":"serayuzgur.crates","identifier":{"value":"serayuzgur.crates","_lower":"serayuzgur.crates"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/serayuzgur.crates-0.4.2","path":"/home/doc/.vscode-oss/extensions/serayuzgur.crates-0.4.2","scheme":"file"}},{"name":"stylelint","version":"0.49.0","displayName":"stylelint","description":"Modern CSS/SCSS/Less linter","publisher":"shinnn","repository":"https://github.com/shinnn/vscode-stylelint","homepage":"https://github.com/shinnn/vscode-stylelint#readme","bugs":"https://github.com/shinnn/vscode-stylelint/issues","qna":"https://stackoverflow.com/questions/tagged/vscode+stylelint","license":"ISC","icon":"media/icon.png","galleryBanner":{"color":"#32CD32","theme":"light"},"engines":{"vscode":">=1.26.0"},"categories":["Linters"],"keywords":["lint","style","stylelint","validation","check"],"activationEvents":["onLanguage:css","onLanguage:html","onLanguage:javascript","onLanguage:javascriptreact","onLanguage:less","onLanguage:markdown","onLanguage:postcss","onLanguage:sass","onLanguage:scss","onLanguage:source.css.styled","onLanguage:source.markdown.math","onLanguage:styled-css","onLanguage:sugarss","onLanguage:svelte","onLanguage:typescript","onLanguage:typescriptreact","onLanguage:vue","onLanguage:vue-html","onLanguage:xml","onLanguage:xsl"],"main":"/home/doc/.vscode-oss/extensions/shinnn.stylelint-0.49.0/index.js","contributes":{"configuration":{"type":"object","title":"stylelint configuration options","properties":{"stylelint.enable":{"type":"boolean","default":true,"description":"Control whether stylelint is enabled for CSS/SCSS/Less files or not."},"stylelint.config":{"type":["object","null"],"default":null,"description":"A stylelint configuration object."},"stylelint.configOverrides":{"type":["object","null"],"default":null,"description":"A partial stylelint config whose properties override the existing ones."}}},"jsonValidation":[{"fileMatch":"**/.stylelintrc*","url":"http://json.schemastore.org/stylelintrc.json"}],"languages":[{"id":"ignore","filenames":[".stylelintignore"]}]},"scripts":{"pretest":"eslint .","test":"node node_modules/vscode/bin/test"},"dependencies":{"find-pkg-dir":"^1.0.1","path-is-inside":"^1.0.2","stylelint-vscode":"^7.0.0-21","vscode-languageclient":"^5.2.1","vscode-languageserver":"^5.2.1","vscode-uri":"^1.0.6"},"devDependencies":{"@shinnn/eslint-config":"^6.10.2","eslint":"^5.16.0","p-wait-for":"^3.1.0","tape":"^4.10.1","vscode":"^1.1.33"},"eslintConfig":{"extends":"@shinnn"},"uuid":"f8b5562e-a2d9-49ab-9f91-e7da91998a92","isBuiltin":false,"isUnderDevelopment":false,"id":"shinnn.stylelint","identifier":{"value":"shinnn.stylelint","_lower":"shinnn.stylelint"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/shinnn.stylelint-0.49.0","path":"/home/doc/.vscode-oss/extensions/shinnn.stylelint-0.49.0","scheme":"file"}},{"name":"rainbow-tags","displayName":"Rainbow Tags","description":"Rainbow Tags","publisher":"voldemortensen","repository":"https://github.com/voldemortensen/rainbow-tags","version":"0.0.3","engines":{"vscode":"^1.30.0"},"categories":["Other"],"activationEvents":["onLanguage:html","onCommand:extension.rainbowTags"],"main":"/home/doc/.vscode-oss/extensions/voldemortensen.rainbow-tags-0.0.3/extension.js","contributes":{"commands":[{"command":"extension.rainbowTags","title":"Rainbow Tags"}]},"scripts":{"postinstall":"node ./node_modules/vscode/bin/install","test":"node ./node_modules/vscode/bin/test"},"devDependencies":{"typescript":"^3.1.4","vscode":"^1.1.25","eslint":"^4.11.0","@types/node":"^8.10.25","@types/mocha":"^2.2.42"},"uuid":"7fcdf7df-2a48-408f-b3a8-ac8a8dffbf00","isBuiltin":false,"isUnderDevelopment":false,"id":"voldemortensen.rainbow-tags","identifier":{"value":"voldemortensen.rainbow-tags","_lower":"voldemortensen.rainbow-tags"},"extensionLocation":{"$mid":1,"fsPath":"/home/doc/.vscode-oss/extensions/voldemortensen.rainbow-tags-0.0.3","path":"/home/doc/.vscode-oss/extensions/voldemortensen.rainbow-tags-0.0.3","scheme":"file"}}]}